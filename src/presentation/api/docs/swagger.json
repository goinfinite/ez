{
    "swagger": "2.0",
    "info": {
        "description": "Infinite Ez API",
        "title": "ezApi",
        "termsOfService": "https://goinfinite.net/tos/",
        "contact": {
            "name": "Infinite Engineering",
            "url": "https://goinfinite.net/",
            "email": "eng+swagger@goinfinite.net"
        },
        "license": {
            "name": "FCL-1.0-ALv2",
            "url": "https://github.com/goinfinite/ez/blob/main/LICENSE.md"
        },
        "version": "0.1.1"
    },
    "basePath": "/api",
    "paths": {
        "/v1/account/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List accounts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "ReadAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "AccountUsername",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Account"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "UpdateAccount",
                "parameters": [
                    {
                        "description": "Only 'accountId' is required. Human-readable fields ('cpuCores', 'memoryMebibytes' etc) will be converted to their technical counterpart ('millicores' etc) automatically.",
                        "name": "updateDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AccountUpdated message or NewKeyString",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "CreateAccount",
                "parameters": [
                    {
                        "description": "Human-readable fields ('cpuCores', 'memoryMebibytes' etc) will be converted to their technical counterpart ('millicores' etc) automatically.",
                        "name": "createDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "AccountCreated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/account/{accountId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "DeleteAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AccountDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/auth/login/": {
            "post": {
                "description": "Create a new session token with the provided credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "CreateSessionTokenWithCredentials",
                "parameters": [
                    {
                        "description": "CreateSessionToken",
                        "name": "createSessionToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSessionToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.AccessToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/backup/destination/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List backups destinations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "ReadBackupsDestinations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BackupDestinationId",
                        "name": "destinationId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "BackupAccountId",
                        "name": "accountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupDestinationName",
                        "name": "destinationName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupDestinationType",
                        "name": "destinationType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ObjectStorageProvider",
                        "name": "objectStorageProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RemoteHostType",
                        "name": "remoteHostType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RemoteHostname",
                        "name": "remoteHostname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadBackupDestinationsResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a backup destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "UpdateBackupDestination",
                "parameters": [
                    {
                        "description": "UpdateBackupDestination",
                        "name": "updateBackupDestinationDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateBackupDestination"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupDestinationUpdated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a backup destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "CreateBackupDestination",
                "parameters": [
                    {
                        "description": "CreateBackupDestination",
                        "name": "createBackupDestinationDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBackupDestinationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBackupDestinationResponse"
                        }
                    },
                    "500": {
                        "description": "CreateBackupDestinationInfraError",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/backup/destination/{accountId}/{destinationId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a backup destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "DeleteBackupDestination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BackupDestinationId",
                        "name": "destinationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupDestinationDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/job/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List backup jobs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "ReadBackupJobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BackupJobId",
                        "name": "jobId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "BackupJobStatus",
                        "name": "jobStatus",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "BackupAccountId",
                        "name": "accountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupDestinationId",
                        "name": "destinationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RetentionStrategy",
                        "name": "retentionStrategy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ArchiveCompressionFormat",
                        "name": "archiveCompressionFormat",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastRunStatus",
                        "name": "lastRunStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastRunBeforeAt",
                        "name": "lastRunBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastRunAfterAt",
                        "name": "lastRunAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "NextRunBeforeAt",
                        "name": "nextRunBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "NextRunAfterAt",
                        "name": "nextRunAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadBackupJobsResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a backup job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "UpdateBackupJob",
                "parameters": [
                    {
                        "description": "UpdateBackupJob",
                        "name": "updateBackupJobDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateBackupJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobUpdated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a backup destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "CreateBackupJob",
                "parameters": [
                    {
                        "description": "CreateBackupJob",
                        "name": "createBackupJobDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBackupJob"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "BackupJobCreated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/job/{accountId}/{jobId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a backup job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "DeleteBackupJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BackupJobId",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/job/{accountId}/{jobId}/run/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Run a backup job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "RunBackupJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BackupJobId",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "BackupTaskCreated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/task/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List backup tasks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "ReadBackupTasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BackupTaskId",
                        "name": "taskId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "BackupAccountId",
                        "name": "accountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupJobId",
                        "name": "jobId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupDestinationId",
                        "name": "destinationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupTaskStatus",
                        "name": "taskStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RetentionStrategy",
                        "name": "retentionStrategy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerId",
                        "name": "containerId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedBeforeAt",
                        "name": "startedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedAfterAt",
                        "name": "startedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FinishedBeforeAt",
                        "name": "finishedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FinishedAfterAt",
                        "name": "finishedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadBackupTasksResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a backup task.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "UpdateBackupTask",
                "parameters": [
                    {
                        "description": "UpdateBackupTask",
                        "name": "updateBackupTaskDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateBackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupTaskUpdated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/task/archive/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List backup tasks archives.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "ReadBackupTaskArchives",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BackupTaskArchiveId",
                        "name": "archiveId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "BackupAccountId",
                        "name": "accountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BackupTaskId",
                        "name": "taskId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadBackupTaskArchivesResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Schedule a backup task archive creation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "CreateBackupTaskArchive",
                "parameters": [
                    {
                        "description": "CreateBackupTaskArchive",
                        "name": "createBackupTaskArchiveDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBackupTaskArchive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "BackupTaskArchiveCreationScheduled",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/task/archive/{archiveId}/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Download a backup task archive file.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "DownloadBackupTaskArchiveFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ArchiveId",
                        "name": "archiveId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupTaskArchiveFile",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a backup task archive.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "DeleteBackupTaskArchive",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BackupTaskArchiveId",
                        "name": "archiveId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupTaskArchiveDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/task/restore/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Schedule a backup task restoration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "RestoreBackupTask",
                "parameters": [
                    {
                        "description": "RestoreBackupTask",
                        "name": "restoreBackupTaskDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RestoreBackupTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "BackupTaskRestorationScheduled",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/backup/task/{taskId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a backup task and its files if \"shouldDiscardFiles\" is true.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "backup"
                ],
                "summary": "DeleteBackupTask",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BackupTaskId",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ShouldDiscardFiles (bool)",
                        "name": "shouldDiscardFiles",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupTaskDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List containers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "ReadContainers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ContainerId",
                        "name": "containerId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ContainerAccountId",
                        "name": "containerAccountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerHostname",
                        "name": "containerHostname",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "ContainerStatus",
                        "name": "containerStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerImageId",
                        "name": "containerImageId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerImageAddress",
                        "name": "containerImageAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerImageHash",
                        "name": "containerImageHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerPortBindings",
                        "name": "containerPortBindings",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerRestartPolicy",
                        "name": "containerRestartPolicy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ContainerProfileId",
                        "name": "containerProfileId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerEnv",
                        "name": "containerEnv",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedBeforeAt",
                        "name": "startedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedAfterAt",
                        "name": "startedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StoppedBeforeAt",
                        "name": "stoppedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StoppedAfterAt",
                        "name": "stoppedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "WithMetrics",
                        "name": "withMetrics",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadContainersResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a container.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "UpdateContainer",
                "parameters": [
                    {
                        "description": "UpdateContainer (Only accountId and containerId are required.)",
                        "name": "updateContainerDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerUpdated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new container.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "CreateContainer",
                "parameters": [
                    {
                        "description": "Only accountId, hostname and imageAddress are required.\u003cbr /\u003eWhen specifying portBindings, only 'publicPort' OR 'serviceName' is required.\u003cbr /\u003e'launchScript' must be base64 encoded (if any).",
                        "name": "createContainerDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContainer"
                        }
                    },
                    {
                        "type": "file",
                        "description": "ArchiveImageFile (For importing container image file, if any.)",
                        "name": "archiveImageFile",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ContainerCreationScheduled",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/image/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List container images.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImage"
                ],
                "summary": "ReadContainerImages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ContainerImage"
                            }
                        }
                    }
                }
            }
        },
        "/v1/container/image/archive/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List container image archive files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImageArchive"
                ],
                "summary": "ReadContainerImageArchives",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImageId",
                        "name": "imageId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadContainerImageArchivesResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Export a container image to a file. This is an asynchronous operation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImageArchive"
                ],
                "summary": "CreateContainerImageArchive",
                "parameters": [
                    {
                        "description": "CreateContainerImageArchiveDto",
                        "name": "createContainerImageArchiveDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContainerImageArchive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ContainerImageArchiveCreationScheduled",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/image/archive/import/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Import container images from archive files.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImageArchive"
                ],
                "summary": "ImportContainerImageArchives",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "ArchiveFiles",
                        "name": "archiveFiles",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ContainerImageArchivesImported",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "207": {
                        "description": "ContainerImageArchivesPartiallyImported",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apiController.FailedArchiveFileUpload"
                            }
                        }
                    }
                }
            }
        },
        "/v1/container/image/archive/{accountId}/{imageId}/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Download a container image archive file.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "containerImageArchive"
                ],
                "summary": "DownloadContainerImageArchive",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ImageId",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerImageArchive",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a container image archive file.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImageArchive"
                ],
                "summary": "DeleteContainerImageArchive",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ImageId",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerImageArchiveDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/image/snapshot/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new container snapshot image. This is an asynchronous operation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImage"
                ],
                "summary": "CreateContainerSnapshotImage",
                "parameters": [
                    {
                        "description": "Container's owner account must have enough quota to store the snapshot image (and/or archive).\u003cbr /\u003e'shouldCreateArchive' and 'shouldDiscardImage' are optional and default to false if not provided.\u003cbr/\u003e'shouldDiscardImage' is only effective when 'shouldCreateArchive' is true and it will delete the snapshot image after creating the archive file.\u003cbr /\u003e 'archiveCompressionFormat' is optional and defaults to 'br' if not provided. Although it's possible to provide other values, it's recommended to use 'br' for best speed/compression ratio.",
                        "name": "createContainerSnapshotImageDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContainerSnapshotImage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ContainerSnapshotImageCreationScheduled",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/image/{accountId}/{imageId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a container image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerImage"
                ],
                "summary": "DeleteContainerImage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ImageId",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerImageDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/metrics/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List containers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "ReadContainers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ContainerId",
                        "name": "containerId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ContainerAccountId",
                        "name": "containerAccountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerHostname",
                        "name": "containerHostname",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "ContainerStatus",
                        "name": "containerStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerImageId",
                        "name": "containerImageId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerImageAddress",
                        "name": "containerImageAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerImageHash",
                        "name": "containerImageHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerPortBindings",
                        "name": "containerPortBindings",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerRestartPolicy",
                        "name": "containerRestartPolicy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ContainerProfileId",
                        "name": "containerProfileId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ContainerEnv",
                        "name": "containerEnv",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedBeforeAt",
                        "name": "startedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedAfterAt",
                        "name": "startedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StoppedBeforeAt",
                        "name": "stoppedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StoppedAfterAt",
                        "name": "stoppedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "WithMetrics",
                        "name": "withMetrics",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadContainersResponse"
                        }
                    }
                }
            }
        },
        "/v1/container/profile/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List container profiles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerProfile"
                ],
                "summary": "ReadContainerProfiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ContainerProfile"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a container profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerProfile"
                ],
                "summary": "UpdateContainerProfile",
                "parameters": [
                    {
                        "description": "Only 'id' is required. Human-readable fields ('cpuCores', 'memoryMebibytes' etc) will be converted to their technical counterpart ('millicores' etc) automatically.",
                        "name": "updateContainerProfileDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateContainerProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerProfileUpdated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new container profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerProfile"
                ],
                "summary": "CreateNewContainerProfile",
                "parameters": [
                    {
                        "description": "Only 'name' and 'baseSpecs' are required. Human-readable fields ('cpuCores', 'memoryMebibytes' etc) will be converted to their technical counterpart ('millicores' etc) automatically.",
                        "name": "createContainerProfileDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContainerProfile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ContainerProfileCreated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/profile/{accountId}/{profileId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a container profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerProfile"
                ],
                "summary": "DeleteContainerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ProfileId",
                        "name": "profileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerProfileDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/container/registry/image/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get container registry images.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerRegistry"
                ],
                "summary": "GetContainerRegistryImages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImageName",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.RegistryImage"
                            }
                        }
                    }
                }
            }
        },
        "/v1/container/registry/image/tagged/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get container registry tagged image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containerRegistry"
                ],
                "summary": "GetContainerRegistryTaggedImage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImageAddress",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.RegistryTaggedImage"
                        }
                    }
                }
            }
        },
        "/v1/container/session/{accountId}/{containerId}/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a session token for the specified container and redirects to Infinite OS dashboard (if shouldRedirect is not false).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "CreateContainerSessionToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ContainerId",
                        "name": "containerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "ShouldRedirect (default/empty is true)",
                        "name": "shouldRedirect",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If shouldRedirect is set to false, the updated session token is returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "302": {
                        "description": "A redirect to Infinite OS dashboard (:1618/{containerId}/).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Container is not found, not running or isn't Infinite OS.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/container/{accountId}/{containerId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a container.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "DeleteContainer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AccountId",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ContainerId",
                        "name": "containerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContainerDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/mapping/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List mappings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "ReadMappings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Mapping"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new mapping.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "CreateNewMapping",
                "parameters": [
                    {
                        "description": "NewMapping",
                        "name": "createMappingDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMapping"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "MappingCreated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/mapping/target/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new mapping target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "CreateMappingTarget",
                "parameters": [
                    {
                        "description": "NewMappingTarget",
                        "name": "createMappingTargetDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMappingTarget"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "MappingTargetCreated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/mapping/{accountId}/{mappingId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a mapping.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "DeleteMapping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MappingId",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MappingDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/mapping/{accountId}/{mappingId}/target/{targetId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a mapping target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "DeleteMappingTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MappingId",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TargetId",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MappingTargetDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/mapping/{mappingId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a mapping.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "DeleteMapping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MappingId",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MappingDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/mapping/{mappingId}/target/{targetId}/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a mapping target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mapping"
                ],
                "summary": "DeleteMappingTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MappingId",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TargetId",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MappingTargetDeleted",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/marketplace/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List marketplace items.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "marketplace"
                ],
                "summary": "ReadMarketplaceItems",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug",
                        "name": "itemSlug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "itemName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "itemType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadMarketplaceItemsResponse"
                        }
                    }
                }
            }
        },
        "/v1/o11y/overview/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Show system information and resource usage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "o11y"
                ],
                "summary": "O11yOverview",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.O11yOverview"
                        }
                    }
                }
            }
        },
        "/v1/scheduled-task/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List scheduled tasks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduled-task"
                ],
                "summary": "ReadScheduledTasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskId",
                        "name": "taskId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "TaskName",
                        "name": "taskName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "TaskStatus",
                        "name": "taskStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "TaskTags (semicolon separated)",
                        "name": "taskTags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedBeforeAt",
                        "name": "startedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StartedAfterAt",
                        "name": "startedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FinishedBeforeAt",
                        "name": "finishedBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FinishedAfterAt",
                        "name": "finishedAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedBeforeAt",
                        "name": "createdBeforeAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CreatedAfterAt",
                        "name": "createdAfterAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageNumber (Pagination)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ItemsPerPage (Pagination)",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortBy (Pagination)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SortDirection (Pagination)",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LastSeenId (Pagination)",
                        "name": "lastSeenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReadScheduledTasksResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Reschedule a task or change its status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scheduled-task"
                ],
                "summary": "UpdateScheduledTask",
                "parameters": [
                    {
                        "description": "UpdateScheduledTask (Only id is required.)",
                        "name": "updateScheduledTaskDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateScheduledTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ScheduledTaskUpdated",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiController.FailedArchiveFileUpload": {
            "type": "object",
            "properties": {
                "failReason": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerWithMetrics": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "integer"
                },
                "entrypoint": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageAddress": {
                    "type": "string"
                },
                "imageHash": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "metrics": {
                    "$ref": "#/definitions/valueObject.ContainerMetrics"
                },
                "portBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.PortBinding"
                    }
                },
                "profileId": {
                    "type": "integer"
                },
                "restartCount": {
                    "type": "integer"
                },
                "restartPolicy": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "stoppedAt": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateAccount": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "quota": {
                    "$ref": "#/definitions/valueObject.AccountQuota"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.CreateBackupDestinationRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "destinationDescription": {
                    "type": "string"
                },
                "destinationName": {
                    "type": "string"
                },
                "destinationPath": {
                    "type": "string"
                },
                "destinationType": {
                    "$ref": "#/definitions/valueObject.BackupDestinationType"
                },
                "downloadBytesSecRateLimit": {
                    "type": "integer"
                },
                "maxConcurrentConnections": {
                    "type": "integer"
                },
                "maxDestinationStorageUsagePercent": {
                    "type": "integer"
                },
                "minLocalStorageFreePercent": {
                    "type": "integer"
                },
                "objectStorageBucketName": {
                    "type": "string"
                },
                "objectStorageEndpointUrl": {
                    "type": "string"
                },
                "objectStorageProvider": {
                    "$ref": "#/definitions/valueObject.ObjectStorageProvider"
                },
                "objectStorageProviderAccessKeyId": {
                    "type": "string"
                },
                "objectStorageProviderRegion": {
                    "type": "string"
                },
                "objectStorageProviderSecretAccessKey": {
                    "type": "string"
                },
                "remoteHostConnectionRetrySecs": {
                    "type": "integer"
                },
                "remoteHostConnectionTimeoutSecs": {
                    "type": "integer"
                },
                "remoteHostNetworkPort": {
                    "type": "integer"
                },
                "remoteHostPassword": {
                    "type": "string"
                },
                "remoteHostPrivateKeyFilePath": {
                    "type": "string"
                },
                "remoteHostType": {
                    "$ref": "#/definitions/valueObject.BackupDestinationRemoteHostType"
                },
                "remoteHostUsername": {
                    "type": "string"
                },
                "remoteHostname": {
                    "type": "string"
                },
                "skipCertificateVerification": {
                    "type": "boolean"
                },
                "uploadBytesSecRateLimit": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateBackupDestinationResponse": {
            "type": "object",
            "properties": {
                "destinationId": {
                    "type": "integer"
                },
                "encryptionKey": {
                    "type": "string"
                }
            }
        },
        "dto.CreateBackupJob": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "archiveCompressionFormat": {
                    "$ref": "#/definitions/valueObject.CompressionFormat"
                },
                "backupSchedule": {
                    "type": "string"
                },
                "containerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "containerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "destinationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jobDescription": {
                    "type": "string"
                },
                "maxConcurrentCpuCores": {
                    "type": "integer"
                },
                "maxTaskRetentionCount": {
                    "type": "integer"
                },
                "maxTaskRetentionDays": {
                    "type": "integer"
                },
                "retentionStrategy": {
                    "$ref": "#/definitions/valueObject.BackupRetentionStrategy"
                },
                "timeoutSecs": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateBackupTaskArchive": {
            "type": "object",
            "properties": {
                "containerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "containerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exceptContainerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskId": {
                    "type": "integer"
                },
                "timeoutSecs": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateContainer": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "autoCreateMappings": {
                    "type": "boolean"
                },
                "entrypoint": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "existingContainerId": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "imageAddress": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "launchScript": {
                    "type": "string"
                },
                "portBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.PortBinding"
                    }
                },
                "profileId": {
                    "type": "integer"
                },
                "restartPolicy": {
                    "type": "string"
                },
                "useImageExposedPorts": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateContainerImageArchive": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "compressionFormat": {
                    "$ref": "#/definitions/valueObject.CompressionFormat"
                },
                "imageId": {
                    "type": "string"
                }
            }
        },
        "dto.CreateContainerProfile": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "baseSpecs": {
                    "$ref": "#/definitions/valueObject.ContainerSpecs"
                },
                "hostMinCapacityPercent": {
                    "type": "integer"
                },
                "maxSpecs": {
                    "$ref": "#/definitions/valueObject.ContainerSpecs"
                },
                "name": {
                    "type": "string"
                },
                "scalingIntervalSecs": {
                    "type": "integer"
                },
                "scalingMaxDurationSecs": {
                    "type": "integer"
                },
                "scalingPolicy": {
                    "type": "string"
                },
                "scalingThreshold": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateContainerSnapshotImage": {
            "type": "object",
            "properties": {
                "archiveCompressionFormat": {
                    "$ref": "#/definitions/valueObject.CompressionFormat"
                },
                "containerId": {
                    "type": "string"
                },
                "shouldCreateArchive": {
                    "type": "boolean"
                },
                "shouldDiscardImage": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateMapping": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "containerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "publicPort": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateMappingTarget": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "containerId": {
                    "type": "string"
                },
                "mappingId": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateSessionToken": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.Pagination": {
            "type": "object",
            "properties": {
                "itemsPerPage": {
                    "type": "integer"
                },
                "itemsTotal": {
                    "type": "integer"
                },
                "lastSeenId": {
                    "type": "string"
                },
                "pageNumber": {
                    "type": "integer"
                },
                "pagesTotal": {
                    "type": "integer"
                },
                "sortBy": {
                    "type": "string"
                },
                "sortDirection": {
                    "$ref": "#/definitions/valueObject.PaginationSortDirection"
                }
            }
        },
        "dto.ReadBackupDestinationsResponse": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {}
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ReadBackupJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BackupJob"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ReadBackupTaskArchivesResponse": {
            "type": "object",
            "properties": {
                "archives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BackupTaskArchive"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ReadBackupTasksResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BackupTask"
                    }
                }
            }
        },
        "dto.ReadContainerImageArchivesResponse": {
            "type": "object",
            "properties": {
                "archives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ContainerImageArchive"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ReadContainersResponse": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Container"
                    }
                },
                "containersWithMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ContainerWithMetrics"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ReadMarketplaceItemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MarketplaceItem"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.ReadScheduledTasksResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ScheduledTask"
                    }
                }
            }
        },
        "dto.RestoreBackupTaskRequest": {
            "type": "object",
            "properties": {
                "archiveId": {
                    "type": "string"
                },
                "containerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "containerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exceptContainerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shouldReplaceExistingContainers": {
                    "type": "boolean"
                },
                "shouldRestoreMappings": {
                    "type": "boolean"
                },
                "taskId": {
                    "type": "integer"
                },
                "timeoutSecs": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "quota": {
                    "$ref": "#/definitions/valueObject.AccountQuota"
                },
                "shouldUpdateApiKey": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateBackupDestination": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "destinationDescription": {
                    "type": "string"
                },
                "destinationId": {
                    "type": "integer"
                },
                "destinationName": {
                    "type": "string"
                },
                "destinationPath": {
                    "type": "string"
                },
                "downloadBytesSecRateLimit": {
                    "type": "integer"
                },
                "maxConcurrentConnections": {
                    "type": "integer"
                },
                "maxDestinationStorageUsagePercent": {
                    "type": "integer"
                },
                "minLocalStorageFreePercent": {
                    "type": "integer"
                },
                "objectStorageBucketName": {
                    "type": "string"
                },
                "objectStorageEndpointUrl": {
                    "type": "string"
                },
                "objectStorageProvider": {
                    "$ref": "#/definitions/valueObject.ObjectStorageProvider"
                },
                "objectStorageProviderAccessKeyId": {
                    "type": "string"
                },
                "objectStorageProviderRegion": {
                    "type": "string"
                },
                "objectStorageProviderSecretAccessKey": {
                    "type": "string"
                },
                "remoteHostConnectionRetrySecs": {
                    "type": "integer"
                },
                "remoteHostConnectionTimeoutSecs": {
                    "type": "integer"
                },
                "remoteHostNetworkPort": {
                    "type": "integer"
                },
                "remoteHostPassword": {
                    "type": "string"
                },
                "remoteHostPrivateKeyFilePath": {
                    "type": "string"
                },
                "remoteHostType": {
                    "$ref": "#/definitions/valueObject.BackupDestinationRemoteHostType"
                },
                "remoteHostUsername": {
                    "type": "string"
                },
                "remoteHostname": {
                    "type": "string"
                },
                "skipCertificateVerification": {
                    "type": "boolean"
                },
                "uploadBytesSecRateLimit": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateBackupJob": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "backupSchedule": {
                    "type": "string"
                },
                "containerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "containerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "destinationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jobDescription": {
                    "type": "string"
                },
                "jobId": {
                    "type": "integer"
                },
                "jobStatus": {
                    "type": "boolean"
                },
                "maxConcurrentCpuCores": {
                    "type": "integer"
                },
                "maxTaskRetentionCount": {
                    "type": "integer"
                },
                "maxTaskRetentionDays": {
                    "type": "integer"
                },
                "timeoutSecs": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateBackupTask": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "integer"
                },
                "taskStatus": {
                    "$ref": "#/definitions/valueObject.BackupTaskStatus"
                }
            }
        },
        "dto.UpdateContainer": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "profileId": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateContainerProfile": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "baseSpecs": {
                    "$ref": "#/definitions/valueObject.ContainerSpecs"
                },
                "hostMinCapacityPercent": {
                    "type": "integer"
                },
                "maxSpecs": {
                    "$ref": "#/definitions/valueObject.ContainerSpecs"
                },
                "name": {
                    "type": "string"
                },
                "profileId": {
                    "type": "integer"
                },
                "scalingIntervalSecs": {
                    "type": "integer"
                },
                "scalingMaxDurationSecs": {
                    "type": "integer"
                },
                "scalingPolicy": {
                    "type": "string"
                },
                "scalingThreshold": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateScheduledTask": {
            "type": "object",
            "properties": {
                "runAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "taskId": {
                    "type": "integer"
                }
            }
        },
        "entity.AccessToken": {
            "type": "object",
            "properties": {
                "expiresIn": {
                    "type": "integer"
                },
                "tokenStr": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/valueObject.AccessTokenType"
                }
            }
        },
        "entity.Account": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "groupId": {
                    "type": "integer"
                },
                "homeDirectory": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "quota": {
                    "$ref": "#/definitions/valueObject.AccountQuota"
                },
                "quotaUsage": {
                    "$ref": "#/definitions/valueObject.AccountQuota"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.BackupJob": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "accountUsername": {
                    "type": "string"
                },
                "archiveCompressionFormat": {
                    "$ref": "#/definitions/valueObject.CompressionFormat"
                },
                "backupSchedule": {
                    "type": "string"
                },
                "containerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "containerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "integer"
                },
                "destinationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exceptContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jobDescription": {
                    "type": "string"
                },
                "jobId": {
                    "type": "integer"
                },
                "jobStatus": {
                    "type": "boolean"
                },
                "lastRunAt": {
                    "type": "integer"
                },
                "lastRunStatus": {
                    "$ref": "#/definitions/valueObject.BackupTaskStatus"
                },
                "maxConcurrentCpuCores": {
                    "type": "integer"
                },
                "maxTaskRetentionCount": {
                    "type": "integer"
                },
                "maxTaskRetentionDays": {
                    "type": "integer"
                },
                "nextRunAt": {
                    "type": "integer"
                },
                "retentionStrategy": {
                    "$ref": "#/definitions/valueObject.BackupRetentionStrategy"
                },
                "tasksCount": {
                    "type": "integer"
                },
                "timeoutSecs": {
                    "type": "integer"
                },
                "totalSpaceUsageBytes": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "entity.BackupTask": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "accountUsername": {
                    "type": "string"
                },
                "backupSchedule": {
                    "type": "string"
                },
                "containerAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "type": "integer"
                },
                "destinationId": {
                    "type": "integer"
                },
                "elapsedSecs": {
                    "type": "integer"
                },
                "executionOutput": {
                    "type": "string"
                },
                "failedContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "finishedAt": {
                    "type": "integer"
                },
                "jobId": {
                    "type": "integer"
                },
                "retentionStrategy": {
                    "$ref": "#/definitions/valueObject.BackupRetentionStrategy"
                },
                "sizeBytes": {
                    "type": "integer"
                },
                "startedAt": {
                    "type": "integer"
                },
                "successfulContainerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskId": {
                    "type": "integer"
                },
                "taskStatus": {
                    "$ref": "#/definitions/valueObject.BackupTaskStatus"
                },
                "timeoutSecs": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "entity.BackupTaskArchive": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "accountUsername": {
                    "type": "string"
                },
                "archiveId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "sizeBytes": {
                    "type": "integer"
                },
                "taskId": {
                    "type": "integer"
                },
                "unixFilePath": {
                    "type": "string"
                }
            }
        },
        "entity.Container": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "integer"
                },
                "entrypoint": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageAddress": {
                    "type": "string"
                },
                "imageHash": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "portBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.PortBinding"
                    }
                },
                "profileId": {
                    "type": "integer"
                },
                "restartCount": {
                    "type": "integer"
                },
                "restartPolicy": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "stoppedAt": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "entity.ContainerImage": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "integer"
                },
                "entrypoint": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "imageAddress": {
                    "type": "string"
                },
                "imageHash": {
                    "type": "string"
                },
                "isa": {
                    "type": "string"
                },
                "originContainerDetails": {
                    "$ref": "#/definitions/entity.Container"
                },
                "originContainerMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Mapping"
                    }
                },
                "portBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.PortBinding"
                    }
                },
                "sizeBytes": {
                    "type": "integer"
                }
            }
        },
        "entity.ContainerImageArchive": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "containerId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "sizeBytes": {
                    "type": "integer"
                },
                "unixFilePath": {
                    "type": "string"
                }
            }
        },
        "entity.ContainerProfile": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "baseSpecs": {
                    "$ref": "#/definitions/valueObject.ContainerSpecs"
                },
                "hostMinCapacityPercent": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maxSpecs": {
                    "$ref": "#/definitions/valueObject.ContainerSpecs"
                },
                "name": {
                    "type": "string"
                },
                "scalingIntervalHours": {
                    "type": "integer"
                },
                "scalingIntervalMinutes": {
                    "type": "integer"
                },
                "scalingIntervalSecs": {
                    "type": "integer"
                },
                "scalingMaxDurationHours": {
                    "type": "integer"
                },
                "scalingMaxDurationMinutes": {
                    "type": "integer"
                },
                "scalingMaxDurationSecs": {
                    "type": "integer"
                },
                "scalingPolicy": {
                    "type": "string"
                },
                "scalingThreshold": {
                    "type": "integer"
                }
            }
        },
        "entity.Mapping": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "accountUsername": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "publicPort": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MappingTarget"
                    }
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "entity.MappingTarget": {
            "type": "object",
            "properties": {
                "containerHostname": {
                    "type": "string"
                },
                "containerId": {
                    "type": "string"
                },
                "containerPrivatePort": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mappingId": {
                    "type": "integer"
                }
            }
        },
        "entity.MarketplaceItem": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "estimatedSizeBytes": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "launchScript": {
                    "type": "string"
                },
                "manifestVersion": {
                    "type": "string"
                },
                "minimumCpuMillicores": {
                    "type": "integer"
                },
                "minimumMemoryBytes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "registryImageAddress": {
                    "type": "string"
                },
                "slugs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.O11yOverview": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "resourceUsage": {
                    "$ref": "#/definitions/valueObject.HostResourceUsage"
                },
                "specs": {
                    "$ref": "#/definitions/valueObject.HardwareSpecs"
                },
                "uptimeRelative": {
                    "type": "string"
                },
                "uptimeSecs": {
                    "type": "integer"
                }
            }
        },
        "entity.RegistryImage": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "imageAddress": {
                    "type": "string"
                },
                "isas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logoUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publisherName": {
                    "type": "string"
                },
                "pullCount": {
                    "type": "integer"
                },
                "registryName": {
                    "type": "string"
                },
                "starCount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "updatedAtRelative": {
                    "type": "string"
                }
            }
        },
        "entity.RegistryTaggedImage": {
            "type": "object",
            "properties": {
                "imageAddress": {
                    "type": "string"
                },
                "imageHash": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "isa": {
                    "type": "string"
                },
                "portBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.PortBinding"
                    }
                },
                "publisherName": {
                    "type": "string"
                },
                "registryName": {
                    "type": "string"
                },
                "sizeBytes": {
                    "type": "integer"
                },
                "tagName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "entity.ScheduledTask": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "elapsedSecs": {
                    "type": "integer"
                },
                "err": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "runAt": {
                    "type": "integer"
                },
                "startedAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeoutSecs": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "valueObject.AccessTokenType": {
            "type": "string",
            "enum": [
                "sessionToken",
                "accountApiKey"
            ],
            "x-enum-varnames": [
                "sessionToken",
                "accountApiKey"
            ]
        },
        "valueObject.AccountQuota": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "number"
                },
                "memoryBytes": {
                    "type": "integer"
                },
                "memoryGibibytes": {
                    "type": "integer"
                },
                "memoryMebibytes": {
                    "type": "integer"
                },
                "millicores": {
                    "type": "integer"
                },
                "storageBytes": {
                    "type": "integer"
                },
                "storageGibibytes": {
                    "type": "integer"
                },
                "storageInodes": {
                    "type": "integer"
                },
                "storageMebibytes": {
                    "type": "integer"
                },
                "storagePerformanceUnits": {
                    "type": "integer"
                }
            }
        },
        "valueObject.BackupDestinationRemoteHostType": {
            "type": "string",
            "enum": [
                "ftp",
                "sftp"
            ],
            "x-enum-varnames": [
                "BackupDestinationRemoteHostTypeFtp",
                "BackupDestinationRemoteHostTypeSftp"
            ]
        },
        "valueObject.BackupDestinationType": {
            "type": "string",
            "enum": [
                "local",
                "remote-host",
                "object-storage"
            ],
            "x-enum-varnames": [
                "BackupDestinationTypeLocal",
                "BackupDestinationTypeRemoteHost",
                "BackupDestinationTypeObjectStorage"
            ]
        },
        "valueObject.BackupRetentionStrategy": {
            "type": "string",
            "enum": [
                "full",
                "incremental"
            ],
            "x-enum-varnames": [
                "BackupRetentionStrategyFull",
                "BackupRetentionStrategyIncremental"
            ]
        },
        "valueObject.BackupTaskStatus": {
            "type": "string",
            "enum": [
                "completed",
                "failed",
                "executing",
                "partial",
                "canceled",
                "cancelled"
            ],
            "x-enum-varnames": [
                "BackupTaskStatusCompleted",
                "BackupTaskStatusFailed",
                "BackupTaskStatusExecuting",
                "BackupTaskStatusPartial",
                "BackupTaskStatusCanceled",
                "BackupTaskStatusCancelled"
            ]
        },
        "valueObject.CompressionFormat": {
            "type": "string",
            "enum": [
                "tar",
                "gzip",
                "zip",
                "xz",
                "br"
            ],
            "x-enum-varnames": [
                "CompressionFormatTarball",
                "CompressionFormatGzip",
                "CompressionFormatZip",
                "CompressionFormatXz",
                "CompressionFormatBrotli"
            ]
        },
        "valueObject.ContainerMetrics": {
            "type": "object",
            "properties": {
                "avgCpuPercent": {
                    "type": "number"
                },
                "currentCpuPercent": {
                    "type": "number"
                },
                "currentCpuPercentStr": {
                    "type": "string"
                },
                "memoryBytes": {
                    "type": "integer"
                },
                "memoryPercent": {
                    "type": "number"
                },
                "memoryPercentStr": {
                    "type": "string"
                },
                "netInputBytes": {
                    "type": "integer"
                },
                "netOutputBytes": {
                    "type": "integer"
                },
                "storageInodesCount": {
                    "type": "integer"
                },
                "storageInputBytes": {
                    "type": "integer"
                },
                "storageOutputBytes": {
                    "type": "integer"
                },
                "storageSpaceBytes": {
                    "type": "integer"
                }
            }
        },
        "valueObject.ContainerSpecs": {
            "type": "object",
            "properties": {
                "cpuCores": {
                    "type": "number"
                },
                "memoryBytes": {
                    "type": "integer"
                },
                "memoryGibibytes": {
                    "type": "integer"
                },
                "memoryMebibytes": {
                    "type": "integer"
                },
                "millicores": {
                    "type": "integer"
                },
                "storagePerformanceUnits": {
                    "type": "integer"
                }
            }
        },
        "valueObject.HardwareSpecs": {
            "type": "object",
            "properties": {
                "cpuCoresCount": {
                    "type": "number"
                },
                "cpuFrequency": {
                    "type": "number"
                },
                "cpuModelName": {
                    "type": "string"
                },
                "memoryTotalBytes": {
                    "type": "integer"
                }
            }
        },
        "valueObject.HostResourceUsage": {
            "type": "object",
            "properties": {
                "cpuPercent": {
                    "type": "number"
                },
                "cpuPercentStr": {
                    "type": "string"
                },
                "memoryPercent": {
                    "type": "number"
                },
                "memoryPercentStr": {
                    "type": "string"
                },
                "netInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.NetInterfaceInfo"
                    }
                },
                "netInfoAggregated": {
                    "$ref": "#/definitions/valueObject.NetInterfaceInfo"
                },
                "storageInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/valueObject.StorageUnitInfo"
                    }
                },
                "userDataStorageInfo": {
                    "$ref": "#/definitions/valueObject.StorageUnitInfo"
                }
            }
        },
        "valueObject.NetInterfaceInfo": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "recvBytes": {
                    "type": "integer"
                },
                "recvDropPackets": {
                    "type": "integer"
                },
                "recvErrs": {
                    "type": "integer"
                },
                "recvPackets": {
                    "type": "integer"
                },
                "sentBytes": {
                    "type": "integer"
                },
                "sentDropPackets": {
                    "type": "integer"
                },
                "sentErrs": {
                    "type": "integer"
                },
                "sentPackets": {
                    "type": "integer"
                }
            }
        },
        "valueObject.ObjectStorageProvider": {
            "type": "string",
            "enum": [
                "custom",
                "akamai",
                "alibaba",
                "aws",
                "cloudflare",
                "digitalocean",
                "google-cloud",
                "linode",
                "magalu",
                "r2",
                "wasabi"
            ],
            "x-enum-varnames": [
                "ObjectStorageProviderCustom",
                "ObjectStorageProviderAkamai",
                "ObjectStorageProviderAlibaba",
                "ObjectStorageProviderAws",
                "ObjectStorageProviderCloudFlare",
                "ObjectStorageProviderDigitalOcean",
                "ObjectStorageProviderGoogleCloud",
                "ObjectStorageProviderLinode",
                "ObjectStorageProviderMagalu",
                "ObjectStorageProviderR2",
                "ObjectStorageProviderWasabi"
            ]
        },
        "valueObject.PaginationSortDirection": {
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ],
            "x-enum-varnames": [
                "PaginationSortDirectionAsc",
                "PaginationSortDirectionDesc"
            ]
        },
        "valueObject.PortBinding": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "integer"
                },
                "privatePort": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "publicPort": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "valueObject.StorageUnitInfo": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "fileSystem": {
                    "type": "string"
                },
                "freeBytes": {
                    "type": "integer"
                },
                "freeInodes": {
                    "type": "integer"
                },
                "mountPoint": {
                    "type": "string"
                },
                "readBytes": {
                    "type": "integer"
                },
                "readOpsCount": {
                    "type": "integer"
                },
                "totalBytes": {
                    "type": "integer"
                },
                "totalInodes": {
                    "type": "integer"
                },
                "usedBytes": {
                    "type": "integer"
                },
                "usedInodes": {
                    "type": "integer"
                },
                "usedInodesPercent": {
                    "type": "number"
                },
                "usedPercent": {
                    "type": "number"
                },
                "usedPercentStr": {
                    "type": "string"
                },
                "writeBytes": {
                    "type": "integer"
                },
                "writeOpsCount": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" + JWT token or API key.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}