basePath: /v1
definitions:
  dto.AddUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.UpdateUser:
    properties:
      password:
        type: string
      shouldUpdateApiKey:
        type: boolean
      userId:
        type: integer
    type: object
  entity.AccessToken:
    properties:
      expiresIn:
        type: integer
      tokenStr:
        type: string
      type:
        $ref: '#/definitions/valueObject.AccessTokenType'
    type: object
  entity.AccountDetails:
    properties:
      groupId:
        type: integer
      id:
        type: integer
      username:
        type: string
    type: object
  entity.O11yOverview:
    properties:
      currentUsage:
        $ref: '#/definitions/valueObject.CurrentResourceUsage'
      hostname:
        type: string
      publicIp:
        type: string
      specs:
        $ref: '#/definitions/valueObject.HardwareSpecs'
      uptimeSecs:
        type: integer
    type: object
  valueObject.AccessTokenType:
    enum:
    - sessionToken
    - userApiKey
    type: string
    x-enum-varnames:
    - sessionToken
    - userApiKey
  valueObject.CurrentResourceUsage:
    properties:
      cpuUsagePercent:
        type: number
      memUsagePercent:
        type: number
      storageUsage:
        type: number
    type: object
  valueObject.HardwareSpecs:
    properties:
      cpuCores:
        type: integer
      cpuFrequency:
        type: number
      cpuModel:
        type: string
      memoryTotal:
        type: integer
      storageTotal:
        type: integer
    type: object
host: localhost:10001
info:
  contact:
    email: eng+swagger@speedia.net
    name: Speedia Engineering
    url: https://speedia.net/
  description: Speedia FleetManager API
  license:
    name: SPEEDIA WEB SERVICES Â© 2023. All Rights Reserved.
    url: https://speedia.net/tos/
  termsOfService: https://speedia.net/tos/
  title: SfmApi
  version: 0.0.1
paths:
  /auth/login/:
    post:
      consumes:
      - application/json
      description: Generate JWT with credentials
      parameters:
      - description: Login
        in: body
        name: loginDto
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.AccessToken'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: GenerateJwtWithCredentials
      tags:
      - auth
  /o11y/overview/:
    get:
      consumes:
      - application/json
      description: Show system information and resource usage.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.O11yOverview'
      security:
      - Bearer: []
      summary: O11yOverview
      tags:
      - o11y
  /user/:
    get:
      consumes:
      - application/json
      description: List users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.AccountDetails'
            type: array
      security:
      - Bearer: []
      summary: GetUsers
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Add a new user.
      parameters:
      - description: NewUserDetails
        in: body
        name: addUserDto
        required: true
        schema:
          $ref: '#/definitions/dto.AddUser'
      produces:
      - application/json
      responses:
        "201":
          description: UserCreated
          schema:
            type: object
      security:
      - Bearer: []
      summary: AddNewUser
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update an user.
      parameters:
      - description: UpdateUserDetails
        in: body
        name: updateUserDto
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: UserUpdated message or NewKeyString
          schema:
            type: object
      security:
      - Bearer: []
      summary: UpdateUser
      tags:
      - user
  /user/{userId}/:
    delete:
      consumes:
      - application/json
      description: Delete an user.
      parameters:
      - description: UserId
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: UserDeleted
          schema:
            type: object
      security:
      - Bearer: []
      summary: DeleteUser
      tags:
      - user
securityDefinitions:
  Bearer:
    description: Type "Bearer" + JWT token or API key.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
