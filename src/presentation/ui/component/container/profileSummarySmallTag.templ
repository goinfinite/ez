package componentContainer

import (
	"github.com/goinfinite/ez/src/domain/entity"
	"github.com/goinfinite/ez/src/domain/valueObject"
	"strconv"
)

func formatProfileSummarySmallTag(specs *valueObject.ContainerSpecs) string {
	if specs == nil {
		return ""
	}

	cpuCoresStr := strconv.FormatFloat(specs.CpuCores, 'f', 1, 64)
	memoryGibiBytesStr := strconv.FormatInt(specs.MemoryGibibytes, 10)

	if specs.CpuCores == 0 {
		return "<strong>" + memoryGibiBytesStr + "</strong>G RAM"
	}

	return "<strong>" + cpuCoresStr + "</strong> CPU " +
		"<span class=\"text-[8px] align-middle\">//</span> <strong>" +
		memoryGibiBytesStr + "</strong>G RAM"
}

templ ProfileSummarySmallTag(profile entity.ContainerProfile) {
	<small class="border-infinite-500 rounded border p-1 align-middle text-xs">
		@templ.Raw(formatProfileSummarySmallTag(&profile.BaseSpecs))
		if profile.MaxSpecs != nil {
			<i class="ph-bold ph-arrows-out-simple mx-1"></i>
			@templ.Raw(formatProfileSummarySmallTag(profile.MaxSpecs))
		}
	</small>
}
