package componentContainer

import (
	"github.com/goinfinite/ez/src/domain/entity"
	"github.com/goinfinite/ez/src/domain/valueObject"
	componentMisc "github.com/goinfinite/ez/src/presentation/ui/component/misc"
)

func formatProfileTaggedSmallSummary(specs *valueObject.ContainerSpecs) string {
	if specs == nil {
		return ""
	}

	if specs.CpuCores == 0 {
		return "<strong>" + specs.MemoryBytes.StringWithSuffix() + "</strong> RAM"
	}

	return "<strong>" + specs.Millicores.ToCoresString() + "</strong> CPU " +
		"<span class=\"text-[8px] align-middle\">//</span> <strong>" +
		specs.MemoryBytes.StringWithSuffix() + "</strong> RAM"
}

templ ProfileTaggedSmallSummary(profile entity.ContainerProfile) {
	<small class="border-infinite-500 rounded border p-1 align-middle text-xs">
		@templ.Raw(formatProfileTaggedSmallSummary(&profile.BaseSpecs))
		if profile.MaxSpecs != nil {
			<i class="ph-bold ph-arrows-out-simple mx-1"></i>
			@templ.Raw(formatProfileTaggedSmallSummary(profile.MaxSpecs))
		}
	</small>
}

templ ProfileTaggedSummary(profileEntity entity.ContainerProfile) {
	<div class="flex flex-col p-1">
		{ profileEntity.Name.String() }
		<div class="mt-1 flex flex-row items-center gap-1.5">
			@componentMisc.TinyTag(
				"ph-airplane-tilt", "", formatProfileTaggedSmallSummary(&profileEntity.BaseSpecs), "infinite-500",
			)
			if profileEntity.MaxSpecs != nil {
				<i class="ph-bold ph-arrows-out-simple"></i>
				@componentMisc.TinyTag(
					"ph-rocket-launch", "", formatProfileTaggedSmallSummary(profileEntity.MaxSpecs), "infinite-500",
				)
			}
		</div>
	</div>
}
