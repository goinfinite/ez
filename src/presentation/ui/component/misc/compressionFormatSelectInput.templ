package componentMisc

import (
	"github.com/goinfinite/ez/src/domain/valueObject"
	componentForm "github.com/goinfinite/ez/src/presentation/ui/component/form"
)

func transformCompressionFormatsIntoSelectPairs() []componentForm.SelectLabelValuePair {
	selectLabelValuePairs := []componentForm.SelectLabelValuePair{}

	valueLabelMap := map[string]string{
		"tar":  `Tarball (Ratio: ☆☆☆ / Speed: ★★★)`,
		"gzip": `Gzip (Ratio: ★☆☆ / Speed: ★★☆)`,
		"zip":  `Zip (Ratio: ★☆☆ / Speed: ★☆☆)`,
		"xz":   `XZ (Ratio: ★★★ / Speed: ★☆☆)`,
		"br":   `Brotli (Ratio: ★★☆ / Speed: ★★☆) (recommended)`,
	}

	for _, compressionFormat := range valueObject.ValidCompressionFormats {
		selectLabelValuePair := componentForm.SelectLabelValuePair{
			Label: compressionFormat,
			Value: compressionFormat,
		}
		if _, exists := valueLabelMap[compressionFormat]; exists {
			selectLabelValuePair.Label = valueLabelMap[compressionFormat]
		}

		selectLabelValuePairs = append(selectLabelValuePairs, selectLabelValuePair)
	}

	return selectLabelValuePairs
}

templ CompressionFormatSelectInput(id, bindValuePath string) {
	@componentForm.SelectInputWithLabelValuePair(
		id, "Compression Format", bindValuePath,
		transformCompressionFormatsIntoSelectPairs(), false,
	)
}
