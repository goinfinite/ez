package componentMisc

import "strconv"

script MultiItemCarouselLocalState(displayAmount, nItems int) {
  document.addEventListener('alpine:init', () => {
    Alpine.data('multiItemCarousel', () => ({
      firstVisibleItemIndex: 0,
      lastVisibleItemIndex: 0,
      visibleItemIndexesSet: new Set(),
      updateVisibleItemIndexesSet() {
        this.visibleItemIndexesSet.clear();
        for (let i = this.firstVisibleItemIndex; i <= this.lastVisibleItemIndex; i++) {
          this.visibleItemIndexesSet.add(i);
        }
      },
      resetPrimaryState() {
        this.firstVisibleItemIndex = 0;
        this.lastVisibleItemIndex = displayAmount - 1;
        this.updateVisibleItemIndexesSet();
      },
      scroll(direction) {
        switch (direction) {
          case 'right':
            if (this.lastVisibleItemIndex === nItems - 1) {
              return;
            }

            this.firstVisibleItemIndex++;
            this.lastVisibleItemIndex++;
            break;
          case 'left':
            if (this.firstVisibleItemIndex === 0) {
              return;
            }

            this.firstVisibleItemIndex--;
            this.lastVisibleItemIndex--;
            break;
        }
        this.updateVisibleItemIndexesSet();
      },
      init() {
        this.resetPrimaryState();
      }
    }));
  });
}

templ MultiItemCarousel(
	carouselItems []templ.Component,
	displayAmount int,
) {
	@MultiItemCarouselLocalState(displayAmount, len(carouselItems))
	<div class="flex-inline w-full items-center justify-center gap-4" x-data="multiItemCarousel">
		<i
			class="ph-duotone ph-caret-circle-left hover:text-infinite-500 cursor-pointer text-2xl text-neutral-100 transition-all duration-500"
			@click="scroll('left')"
		></i>
		<div class={ "grid grid-cols-" + strconv.Itoa(displayAmount) + " gap-3" }>
			for itemIndex, carouselItem := range carouselItems {
				<div
					class="bg-ez-500 hover:ring-infinite-500 hover:text-infinite-500 group cursor-pointer items-center justify-center overflow-hidden rounded-md p-2 transition-all duration-300 hover:ring-1"
					:class={ "visibleItemIndexesSet.has(" + strconv.Itoa(itemIndex) + ") ? 'flex' : 'hidden'" }
				>
					@carouselItem
				</div>
			}
		</div>
		<i
			class="ph-duotone ph-caret-circle-right hover:text-infinite-500 cursor-pointer text-2xl text-neutral-100 transition-all duration-500"
			@click="scroll('right')"
		></i>
	</div>
}
