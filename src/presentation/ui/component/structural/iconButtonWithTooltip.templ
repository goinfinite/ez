package componentStructural

const (
	IconButtonShapeCircular = "circular"
	IconButtonShapeSquare   = "square"
)

type IconButtonWithTooltipDto struct {
	Id              string
	Shape           string
	Size            string
	Icon            string
	BackgroundColor string
	HoverColor      string
	OnClick         string
	TooltipText     string
	TooltipColor    string
	TooltipPosition string
}

templ IconButtonWithTooltip(inputDto IconButtonWithTooltipDto) {
	<!-- IconButtonWithTooltip -->
	<div class="group relative">
		{{ radiusRoundness := "rounded-full" }}
		if inputDto.Shape == IconButtonShapeSquare {
			{{ radiusRoundness = "rounded-sm" }}
		}
		{{ buttonPadding := "p-2" }}
		switch inputDto.Size {
			case "xs":
				{{ buttonPadding = "p-0.5" }}
			case "sm":
				{{ buttonPadding = "p-1" }}
			case "md":
				{{ buttonPadding = "p-1.5" }}
			case "lg":
				{{ buttonPadding = "p-2" }}
			case "xl":
				{{ buttonPadding = "p-2.5" }}
			case "2xl":
				{{ buttonPadding = "p-3" }}
			case "3xl":
				{{ buttonPadding = "p-4" }}
		}
		{{ iconSize := "text-xl" }}
		switch inputDto.Size {
			case "xs":
				{{ iconSize = "text-sm" }}
			case "sm":
				{{ iconSize = "text-md" }}
			case "md":
				{{ iconSize = "text-lg" }}
			case "lg":
				{{ iconSize = "text-2xl" }}
			case "xl":
				{{ iconSize = "text-3xl" }}
			case "2xl":
				{{ iconSize = "text-4xl" }}
			case "3xl":
				{{ iconSize = "text-5xl" }}
		}
		<button
			if inputDto.Id != "" {
				id={ inputDto.Id }
			}
			type="button"
			if inputDto.OnClick != "" {
				@click={ inputDto.OnClick }
			}
			class={ "bg-" + inputDto.BackgroundColor + " hover:bg-" + inputDto.HoverColor + " " + buttonPadding + " leading-none " + radiusRoundness }
		>
			<i class={ iconSize + " ph-bold " + inputDto.Icon }></i>
		</button>
		if inputDto.TooltipText != "" {
			{{ tooltipBaseClass := "absolute hidden transition-all duration-300 group-hover:flex transform w-fit p-1.5 bg-" + inputDto.TooltipColor + " text-neutral-100 text-xs rounded-md shadow-lg" }}
			switch inputDto.TooltipPosition {
				case "top":
					<div class={ tooltipBaseClass + " bottom-full mb-1.5 group-hover:-translate-y-0.5 left-1/2 -translate-x-1/2" }>
						{ inputDto.TooltipText }
					</div>
				case "bottom":
					<div class={ tooltipBaseClass + " top-full mt-1.5 group-hover:translate-y-0.5 left-1/2 -translate-x-1/2" }>
						{ inputDto.TooltipText }
					</div>
				case "left":
					<div class={ tooltipBaseClass + " right-full mr-1.5 group-hover:translate-x-0.5 top-1/2 -translate-y-1/2" }>
						{ inputDto.TooltipText }
					</div>
				case "right":
					<div class={ tooltipBaseClass + " left-full ml-1.5 group-hover:-translate-x-0.5 top-1/2 -translate-y-1/2" }>
						{ inputDto.TooltipText }
					</div>
			}
		}
	</div>
}
