package componentStructural

script RecordFiltersLocalState(componentId string) {
	document.addEventListener('alpine:init', () => {
		Alpine.data(componentId+'RecordFilters', () => ({
			visibleFilterIndexes: [],
			resetState() {
				this.visibleFilterIndexes = [];
			},
      createFilterField() {
				this.visibleFilterIndexes.push(this.visibleFilterIndexes.length);
      },
      removeFilterField(filterIndex) {
				this.visibleFilterIndexes = this.visibleFilterIndexes.filter(
					(index) => index !== filterIndex,
				);
      },
			init() {
				this.resetState();
			},
		}));
	});
}

templ RecordFilters(componentId, filtersBindPath string) {
	<!-- RecordFilters JavaScript -->
	@RecordFiltersLocalState(componentId)
	<!-- RecordFilters HTML -->
	<div class="flex flex-row items-center justify-start" x-data={ componentId + "RecordFilters" }>
		<div class="flex flex-row flex-wrap items-center gap-2">
			<template x-for={ "(filterKey, filterIndex) in Object.keys(" + filtersBindPath + ")" }>
				<!-- FilterField HTML -->
				<div
					class="bg-ez-400 flex flex-row items-center gap-1.5 rounded-xl p-2"
					x-data="{selectedFilterKey: filterKey}"
					x-show={ "visibleFilterIndexes.includes(filterIndex) || " + filtersBindPath + "[selectedFilterKey] !== ''" }
				>
					<div class="relative w-full">
						<select
							x-model="selectedFilterKey"
							placeholder="filter"
							class="bg-ez-300 hover:border-ez-100 border-ez-200 autofill:bg-ez-300 focus:border-ez-50 h-7.5 peer relative w-full appearance-none rounded-md border px-1.5 text-[13px] leading-normal text-neutral-100 placeholder-transparent outline-none transition-all"
						>
							<template x-for={ "optionsFilterKey in Object.keys(" + filtersBindPath + ")" }>
								<option
									class="bg-ez-500 checked:bg-infinite-500 bg-opacity-90"
									:value="optionsFilterKey"
									x-text="optionsFilterKey"
									:selected="selectedFilterKey === optionsFilterKey"
								></option>
							</template>
						</select>
						<label class="from-ez-300 via-ez-300 absolute -top-2 left-1.5 z-[1] cursor-text bg-gradient-to-t via-55% to-transparent to-55% px-1.5 text-xs font-bold text-neutral-50 text-opacity-80 transition-all before:absolute before:left-0 before:top-0 before:z-[-1] before:block before:h-full before:w-full before:bg-white before:transition-all peer-placeholder-shown:top-2.5 peer-placeholder-shown:text-sm peer-placeholder-shown:font-normal peer-autofill:-top-2 peer-hover:text-opacity-90 peer-focus:-top-2 peer-focus:cursor-default peer-focus:text-opacity-100">
							filter
						</label>
						<i class="ph-bold ph-caret-down pointer-events-none absolute right-2 top-3 text-xs"></i>
					</div>
					<div class="flex w-full flex-row items-center gap-1.5">
						<div class="relative w-full">
							<input
								type="text"
								x-model:value={ filtersBindPath + "[selectedFilterKey]" }
								class="bg-ez-300 border-ez-200 hover:border-ez-100 autofill:bg-ez-300 focus:border-ez-50 h-7.5 min-w-38 peer relative w-full rounded-md border px-1.5 text-[13px] text-neutral-100 placeholder-transparent outline-none transition-all"
							/>
							<i
								x-show={ filtersBindPath + "[selectedFilterKey] !== ''" }
								@click.prevent={ filtersBindPath + "[selectedFilterKey] = ''" }
								class="ph-bold ph-x-circle text-md absolute right-1.5 top-2 cursor-pointer text-neutral-300 hover:text-neutral-50"
							></i>
						</div>
						<button
							type="button"
							class="bg-ez-500 hover:bg-ez-300 flex h-6 items-center rounded-lg p-1.5 leading-none"
							@click={ filtersBindPath + "[selectedFilterKey] = ''; removeFilterField(filterIndex)" }
						>
							<i class="ph-bold ph-x text-[10px]"></i>
						</button>
					</div>
				</div>
			</template>
		</div>
		<button
			type="button"
			class="bg-ez-400 hover:bg-ez-300 h-6.5 ml-1 flex items-center rounded-lg p-1.5 leading-none"
			x-show={ "visibleFilterIndexes.length < Object.keys(" + filtersBindPath + ").length" }
			@click="createFilterField()"
		>
			<i class="ph-bold ph-funnel text-xs" x-show={ "visibleFilterIndexes.length === 0 && Object.values(" + filtersBindPath + ").some((value) => value === '')" }></i>
			<i class="ph-bold ph-plus text-xs" x-show={ "visibleFilterIndexes.length > 0 || Object.values(" + filtersBindPath + ").some((value) => value !== '')" }></i>
		</button>
		<button
			type="button"
			class="bg-ez-400 hover:bg-ez-200 ml-1 flex h-7 flex-row items-center rounded-md px-2 text-sm leading-none"
			@click={ "$dispatch('update:" + componentId + "-record-filters')" }
			x-show={ "visibleFilterIndexes.length > 0 || Object.values(" + filtersBindPath + ").some((value) => value !== '')" }
		>
			<i class="ph-duotone ph-funnel text-md mr-1 align-middle"></i>
			apply
		</button>
	</div>
}
