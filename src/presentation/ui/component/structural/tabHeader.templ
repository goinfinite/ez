package componentStructural

type TabHeaderItem struct {
	Label string
	Value string
	Icon  string
	Size  string
}

templ VerticalTabHeader(
	tabHeaderItems []TabHeaderItem,
	modelBindPath string,
) {
	<!-- VerticalTabHeader -->
	<ul class="flex w-full flex-col gap-1 py-3 text-sm">
		for _, item := range tabHeaderItems {
			<li
				class="bg-ez-400 min-w-20 border-ez-500 border-3 hover:bg-ez-500 flex w-fit cursor-pointer flex-row items-center justify-center gap-1.5 self-end rounded-l-md border-r-0 p-2.5 transition-all"
				:class={ modelBindPath + " === '" + item.Value + "' && 'font-bold text-infinite-500 bg-ez-500'" }
				@click={ modelBindPath + " = '" + item.Value + "'" }
			>
				if item.Icon != "" {
					<i class={ "ph-duotone " + item.Icon + " align-middle text-lg" }></i>
				}
				{ item.Label }
			</li>
		}
	</ul>
}

templ HorizontalTabHeader(
	tabHeaderItems []TabHeaderItem,
	modelBindPath string,
) {
	<!-- HorizontalTabHeader -->
	<ul class="flex w-full gap-1">
		for _, item := range tabHeaderItems {
			{{ itemLabelSize := "sm" }}
			{{ itemIconSize := "lg" }}
			{{ itemPaddingSize := "2.5" }}
			switch item.Size {
				case "md":
					{{ itemLabelSize = "md" }}
					{{ itemIconSize = "xl" }}
					{{ itemPaddingSize = "3" }}
				case "lg":
					{{ itemLabelSize = "lg" }}
					{{ itemIconSize = "2xl" }}
					{{ itemPaddingSize = "3.5" }}
				case "xl":
					{{ itemLabelSize = "xl" }}
					{{ itemIconSize = "3xl" }}
					{{ itemPaddingSize = "4" }}
				case "2xl":
					{{ itemLabelSize = "2xl" }}
					{{ itemIconSize = "4xl" }}
					{{ itemPaddingSize = "4.5" }}
				case "3xl":
					{{ itemLabelSize = "3xl" }}
					{{ itemIconSize = "5xl" }}
					{{ itemPaddingSize = "5" }}
			}
			<li
				class={ "bg-neutral-100 bg-opacity-[2%] flex cursor-pointer flex-row rounded-t-md items-center p-" + itemPaddingSize + " transition-all text-" + itemLabelSize }
				:class={ modelBindPath + " === '" + item.Value + "' && 'font-bold text-infinite-500 bg-opacity-[4%]'" }
				@click={ modelBindPath + " = '" + item.Value + "'" }
			>
				if item.Icon != "" {
					<i class={ "ph-duotone " + item.Icon + " mr-2 text-" + itemIconSize }></i>
				}
				{ item.Label }
			</li>
		}
	</ul>
}
