package layout

type SidebarItem struct {
	Label             string
	Icon              string
	Link              string
	AdditionalClasses string
}

func sidebarItemsGetter(currentUrl string) []SidebarItem {
	sidebarItems := []SidebarItem{
		{Label: "Overview", Icon: "ph-speedometer", Link: "/_/#/overview"},
		{Label: "Accounts", Icon: "ph-users-three", Link: "/_/#/accounts"},
		{Label: "Container Profiles", Icon: "ph-intersect-square", Link: "/container/profile/"},
		{Label: "Mappings", Icon: "ph-graph", Link: "/_/#/mappings"},
	}

	for itemIndex := range sidebarItems {
		if sidebarItems[itemIndex].Link != currentUrl {
			continue
		}

		sidebarItems[itemIndex].AdditionalClasses = " text-speedia-primary"
		break
	}

	return sidebarItems
}

templ Sidebar(currentUrl string) {
	<sidebar class="h-screen w-28 bg-neutral-950 bg-opacity-40">
		<div class="my-6 w-full">
			<a href="/_/#/overview" class="mx-auto mb-2 flex w-[84px] max-w-[84px] items-center justify-center">
				<img
					src="/assets/control-logo-dark.svg"
					alt="Speedia Control"
				/>
			</a>
		</div>
		<div class="mt-4 w-full">
			<ul>
				for _, item := range sidebarItemsGetter(currentUrl) {
					<li class={ "my-2 p-2 transition-all hover:bg-neutral-100 hover:bg-opacity-10" + item.AdditionalClasses }>
						<a href={ templ.URL(item.Link) }>
							<div class="mx-auto mb-1 flex h-[48px] max-h-[48px] w-[48px] max-w-[48px] items-center justify-center rounded-full bg-neutral-950 bg-opacity-40 p-2">
								<i class={ "ph-duotone " + item.Icon + " block text-3xl" }></i>
							</div>
							<div class="text-center text-sm">
								{ item.Label }
							</div>
						</a>
					</li>
				}
			</ul>
		</div>
	</sidebar>
}
