package page

import (
	"github.com/speedianet/control/src/domain/entity"
	"github.com/speedianet/control/src/domain/valueObject"
	componentContainer "github.com/speedianet/control/src/presentation/ui/component/container"
	componentForm "github.com/speedianet/control/src/presentation/ui/component/form"
	componentMisc "github.com/speedianet/control/src/presentation/ui/component/misc"
	componentStructural "github.com/speedianet/control/src/presentation/ui/component/structural"
	uiHelper "github.com/speedianet/control/src/presentation/ui/helper"
)

script ContainerProfileIndexLocalState() {
	document.addEventListener('alpine:init', () => {
		Alpine.data('containerProfileManager', () => ({
			containerProfile: {
				'id': '',
				'name': '',
				'baseSpecs': {
					'millicores': 0,
					'cpuCores': 0,
					'memoryBytes': 0,
					'memoryMebibytes': 0,
					'memoryGibibytes': 0,
					'storagePerformanceUnits': 0
				},
				'maxSpecs': {
					'millicores': null,
					'cpuCores': null,
					'memoryBytes': null,
					'memoryMebibytes': null,
					'memoryGibibytes': null,
					'storagePerformanceUnits': null
				},
				'scalingPolicy': null,
				'scalingThreshold': null,
				'scalingMaxDurationSecs': null,
				'scalingMaxDurationMinutes': null,
				'scalingMaxDurationHours': null,
				'scalingIntervalSecs': null,
				'scalingIntervalMinutes': null,
				'scalingIntervalHours': null,
				'hostMinCapacityPercent': null
			},
			textualViewSelector: true,
			gibibyteSelector: true,
			preferedByteSuffix: 'GiB',

			scalingIntervalHoursSelector: true,
			scalingMaxDurationHoursSelector: true,
			get isScalingPolicyConn() {
				return this.containerProfile.scalingPolicy == 'connection';
			},

			isUpdateModalOpen: false,
			openUpdateModal(containerProfileData) {
				this.containerProfile = containerProfileData;
				
				this.gibibyteSelector = true;
				if (this.containerProfile.baseSpecs.memoryGibibytes < 1) {
					this.gibibyteSelector = false;
				}

				this.scalingIntervalHoursSelector = true;
				if (this.containerProfile.scalingIntervalHours < 1) {
					this.scalingIntervalHoursSelector = false;
				}

				this.scalingMaxDurationHoursSelector = true;
				if (this.containerProfile.scalingMaxDurationHours < 1) {
					this.scalingMaxDurationHoursSelector = false;
				}

				this.isUpdateModalOpen = true;
			},
			closeUpdateModal() {
				this.isUpdateModalOpen = false;
			},
		}))
	})
}

templ ContainerProfileIndex(profiles []entity.ContainerProfile) {
	@ContainerProfileIndexLocalState()
	@componentMisc.PageTitle(
		"Container Profiles",
		"Container Profiles enable you to establish standardized settings that govern container hardware resource limits, autoscaling policies, and other configurations.",
		"ph-intersect-square",
	)
	<div class="container flex" x-data="containerProfileManager">
		<div id="profiles-tables" class="card w-full">
			@ContainerProfilesTextualTable(profiles)
		</div>
		@UpdateContainerProfileModal()
	</div>
}

templ ContainerProfilesTextualTable(profiles []entity.ContainerProfile) {
	<table
		id="profiles-textual-table"
		hx-get="/container/profile/"
		hx-trigger="submit from:form delay:500ms, click from:button#delete-profile delay:500ms"
		hx-select="#profiles-tables"
		hx-target="#profiles-tables"
		hx-swap="outerHTML transition:true"
		class="w-full table-auto border-collapse rounded-md transition-all duration-300 ease-in-out"
	>
		<thead class="bg-control-800 text-xs uppercase text-neutral-400">
			<tr class="border-b border-neutral-500 border-opacity-90 text-center">
				<th scope="col" class="px-5 py-3">Id</th>
				<th scope="col" class="px-5 py-3 text-left">Name</th>
				<th scope="col" class="px-5 py-3">Scaling Policy</th>
				<th scope="col" class="px-5 py-3">Scaling Threshold</th>
				<th scope="col" class="px-5 py-3">Scaling Max Duration</th>
				<th scope="col" class="px-5 py-3">Scaling Interval</th>
				<th scope="col" class="px-5 py-3">Minimum Free Host Capacity (%)</th>
				<th scope="col" class="px-5 py-3"></th>
			</tr>
		</thead>
		<tbody>
			for _, profile := range profiles {
				<tr class="odd:bg-control-400 even:bg-control-600 border-b border-neutral-500 border-opacity-30 text-center">
					<td class="px-6 py-4">{ profile.Id.String() }</td>
					<td class="w-80 px-6 py-4 text-left">
						<p>{ profile.Name.String() }</p>
						@componentContainer.ProfileSummarySmallTag(profile)
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingPolicy) }
					</td>
					<td class="px-6 py-4">
						if profile.ScalingThreshold != nil {
							if profile.ScalingPolicy.String() == "connection" {
								{ uiHelper.FormatPointer(profile.ScalingThreshold) }
								<span class="text-xs">conn(s)</span>
							} else {
								{ uiHelper.FormatPointer(profile.ScalingThreshold) }<span class="text-xs">%</span>
							}
						} else {
							-
						}
					</td>
					<td class="px-6 py-4">
						if profile.ScalingMaxDurationSecs != nil {
							if *profile.ScalingMaxDurationHours > 0 {
								{ uiHelper.FormatPointer(profile.ScalingMaxDurationHours) }
								<span class="text-xs">hour(s)</span>
							} else {
								{ uiHelper.FormatPointer(profile.ScalingMaxDurationMinutes) }
								<span class="text-xs">min(s)</span>
							}
						} else {
							-
						}
					</td>
					<td class="px-6 py-4">
						if profile.ScalingIntervalSecs != nil {
							if *profile.ScalingIntervalHours > 0 {
								{ uiHelper.FormatPointer(profile.ScalingIntervalHours) }
								<span class="text-xs">hour(s)</span>
							} else {
								{ uiHelper.FormatPointer(profile.ScalingIntervalMinutes) }
								<span class="text-xs">min(s)</span>
							}
						} else {
							-
						}
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.HostMinCapacityPercent) }
					</td>
					<td class="inline-flex px-6 py-4">
						<button
							type="button"
							@click={ "openUpdateModal(" + profile.JsonSerialize() + ")" }
							class="me-2 inline-flex items-center rounded-full bg-neutral-50 bg-opacity-20 p-3 text-center font-medium hover:bg-opacity-40"
						>
							<i class="ph-bold ph-pencil text-xl"></i>
						</button>
						<button
							id="delete-profile"
							hx-delete={ "/api/v1/container/profile/" + profile.Id.String() + "/" }
							hx-swap="none"
							type="button"
							class="me-2 inline-flex items-center rounded-full bg-red-800 bg-opacity-60 p-3 text-center font-medium hover:bg-opacity-90"
						>
							<i class="ph-bold ph-trash text-xl"></i>
						</button>
					</td>
				</tr>
			}
			if len(profiles) == 0 {
				<tr class="border-b border-neutral-500 border-opacity-30 bg-neutral-950 bg-opacity-20">
					<td class="px-6 py-4" colspan="12">No profiles found.</td>
				</tr>
			}
		</tbody>
	</table>
}

templ UpdateContainerProfileTextualForm() {
	<form
		hx-put="/api/v1/container/profile/"
		hx-indicator="#loading-overlay"
		hx-swap="none"
	>
		<input type="hidden" name="id" x-bind:value="containerProfile.id"/>
		<div class="bg-control-500 rounded-md p-6 text-center text-lg leading-10">
			The
			<div class="w-50 mx-2 inline-flex">
				@componentForm.InputField("text", "name", "", "containerProfile.name", true)
			</div>
			profile allows containers to utilize
			<div class="max-w-12 mx-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.baseSpecs.cpuCores", "", "containerProfile.baseSpecs.cpuCores", true)
			</div>
			CPU cores,
			<div class="w-42 mr-2 inline-flex space-x-2">
				<template x-if="preferedByteSuffix == 'GiB'">
					@componentForm.InputField("number", "containerProfile.baseSpecs.memoryGibibytes", "", "containerProfile.baseSpecs.memoryGibibytes", true)
				</template>
				<template x-if="preferedByteSuffix == 'MiB'">
					@componentForm.InputField("number", "containerProfile.baseSpecs.memoryMebibytes", "", "containerProfile.baseSpecs.memoryMebibytes", true)
				</template>
				@componentForm.SelectInput("preferedByteSuffix", "", "preferedByteSuffix", []string{"GiB", "MiB"}, true)
			</div>
			of RAM, and
			<div class="max-w-12 mx-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.baseSpecs.storagePerformanceUnits", "", "containerProfile.baseSpecs.storagePerformanceUnits", true)
			</div>
			storage performance units (equivalent to <strong x-text="containerProfile.baseSpecs.storagePerformanceUnits * 5"></strong> MiB/s & <strong x-text="containerProfile.baseSpecs.storagePerformanceUnits * 250"></strong> operations per second { "for" } read and write).
		</div>
		<div class="bg-control-600 mt-4 rounded-md p-6 text-center text-base leading-9">
			Optionally, containers using this profile can scale up to
			<div class="max-w-12 mx-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.maxSpecs.cpuCores", "", "containerProfile.maxSpecs.cpuCores", true)
			</div>
			CPU cores,
			<div class="w-42 mr-2 inline-flex space-x-2">
				<template x-if="preferedByteSuffix == 'GiB'">
					@componentForm.InputField("number", "containerProfile.maxSpecs.memoryGibibytes", "", "containerProfile.maxSpecs.memoryGibibytes", true)
				</template>
				<template x-if="preferedByteSuffix == 'MiB'">
					@componentForm.InputField("number", "containerProfile.maxSpecs.memoryMebibytes", "", "containerProfile.maxSpecs.memoryMebibytes", true)
				</template>
				@componentForm.SelectInput("preferedByteSuffix", "", "preferedByteSuffix", []string{"GiB", "MiB"}, true)
			</div>
			of RAM, and
			<div class="max-w-12 mx-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.maxSpecs.storagePerformanceUnits", "", "containerProfile.maxSpecs.storagePerformanceUnits", true)
			</div>
			storage performance units <small>(<strong><span x-text="containerProfile.maxSpecs.storagePerformanceUnits * 5"></span> MiB/s & <span x-text="containerProfile.maxSpecs.storagePerformanceUnits * 250"></span> ops</strong>)</small>
			during periods of
			<div class="max-w-12 mx-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.scalingMaxDurationHours", "", "containerProfile.scalingMaxDurationHours", true)
			</div>
			hour(s) at regular intervals of
			<div class="max-w-12 mx-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.scalingIntervalHours", "", "containerProfile.scalingIntervalHours", true)
			</div>
			hour(s), provided the
			<div class="w-30 mx-2 inline-flex">
				@componentForm.SelectInput("scalingPolicy", "", "containerProfile.scalingPolicy", valueObject.ValidScalingPolicies, true)
			</div>
			usage exceeds
			<div class="max-w-12 ml-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.scalingThreshold", "", "containerProfile.scalingThreshold", true)
			</div><span x-show="!isScalingPolicyConn">%</span><span x-show="isScalingPolicyConn" class="ml-2">conn(s)</span> and the host machine has at least
			<div class="max-w-12 ml-2 inline-flex">
				@componentForm.InputField("number", "containerProfile.hostMinCapacityPercent", "", "containerProfile.hostMinCapacityPercent", true)
			</div>
			% free capacity available.
		</div>
		<button
			type="submit"
			@click="closeUpdateModal()"
			class="bg-speedia-500 border-speedia-500 mb-1 mt-5 w-full rounded-md border bg-opacity-90 px-5 py-2.5 text-center text-sm font-bold lowercase text-white hover:brightness-125"
		>
			<i class="ph-duotone ph-check-fat mr-1 align-middle"></i> Update
		</button>
	</form>
}

templ UpdateContainerProfileRegularForm() {
	<form
		hx-put="/api/v1/container/profile/"
		hx-indicator="#loading-overlay"
		hx-swap="none"
	>
		<input type="hidden" name="id" x-bind:value="containerProfile.id"/>
		<div class="my-6">
			@componentForm.InputField("text", "name", "Profile Name", "containerProfile.name", false)
		</div>
		<div class="flex flex-row space-x-4">
			<div class="space-y-5.5 bg-control-500 w-1/2 rounded-md p-4">
				<div>
					<h3 class="font-bold">Base Specifications</h3>
					<p class="text-xs">The standard allocation of resources available to the container for everyday operations.</p>
				</div>
				@componentForm.NumberRangeInputField(
					"baseSpecs.cpuCores", "CPU Cores", "", "0", "32", "0.5",
					"containerProfile.baseSpecs.cpuCores",
				)
				@componentForm.DualNumberRangeInputField(
					"RAM Memory", "gibibyteSelector",
					"baseSpecs.memoryGibibytes", "GiB", "1", "64", "1",
					"containerProfile.baseSpecs.memoryGibibytes",
					"memoryMebibytes", "MiB", "100", "65536", "100",
					"containerProfile.baseSpecs.memoryMebibytes",
				)
				<div>
					@componentForm.NumberRangeInputField(
						"baseSpecs.storagePerformanceUnits", "Storage Performance Units",
						"", "1", "100", "1",
						"containerProfile.baseSpecs.storagePerformanceUnits",
					)
					<small class="mt-3 block rounded-md border-x-4 border-amber-400 border-opacity-20 bg-amber-400 bg-opacity-5 p-1 text-center text-[11px] text-neutral-50">
						<strong x-text="containerProfile.baseSpecs.storagePerformanceUnits"></strong> unit(s) = <strong><span x-text="containerProfile.baseSpecs.storagePerformanceUnits * 5"></span> MiB/s & <span x-text="containerProfile.baseSpecs.storagePerformanceUnits * 250"></span> operations</strong> of read and write
					</small>
				</div>
			</div>
			<div class="space-y-5.5 bg-control-500 w-1/2 rounded-md p-4">
				<div>
					<h3 class="font-bold">Max Specifications</h3>
					<p class="text-xs">The peak allocation of resources available to the container during autoscaling periods.</p>
				</div>
				@componentForm.NumberRangeInputField(
					"maxSpecs.cpuCores", "CPU Cores", "", "0", "32", "0.5",
					"containerProfile.maxSpecs.cpuCores",
				)
				@componentForm.DualNumberRangeInputField(
					"RAM Memory", "gibibyteSelector",
					"maxSpecs.memoryGibibytes", "GiB", "1", "64", "1",
					"containerProfile.maxSpecs.memoryGibibytes",
					"memoryMebibytes", "MiB", "100", "65536", "100",
					"containerProfile.maxSpecs.memoryMebibytes",
				)
				<div>
					@componentForm.NumberRangeInputField(
						"maxSpecs.storagePerformanceUnits", "Storage Performance Units",
						"", "1", "100", "1",
						"containerProfile.maxSpecs.storagePerformanceUnits",
					)
					<small class="mt-3 block rounded-md border-x-4 border-amber-400 border-opacity-20 bg-amber-400 bg-opacity-5 p-1 text-center text-[11px] text-neutral-50">
						<strong x-text="containerProfile.maxSpecs.storagePerformanceUnits"></strong> unit(s) = <strong><span x-text="containerProfile.maxSpecs.storagePerformanceUnits * 5"></span> MiB/s & <span x-text="containerProfile.maxSpecs.storagePerformanceUnits * 250"></span> operations</strong> of read and write
					</small>
				</div>
			</div>
		</div>
		<section class="mt-4 w-full rounded-md">
			<details class="bg-control-500 group rounded-md p-4 group-open:bg-opacity-30">
				<summary class="relative flex cursor-pointer list-none items-center pr-8 text-neutral-50 text-opacity-80 focus-visible:outline-none group-open:text-opacity-100 group-hover:text-opacity-100 [&::-webkit-details-marker]:hidden">
					<i class="ph-duotone ph-gear mr-2 text-2xl"></i>
					<span class="font-bold">Advanced Settings</span>
					<i class="ph-bold ph-plus absolute right-0 top-1.5 text-xs transition duration-300 group-open:rotate-45"></i>
				</summary>
				<div class="space-y-5.5 mt-5 py-2">
					@componentForm.SelectInput(
						"scalingPolicy", "Scaling Policy", "containerProfile.scalingPolicy",
						valueObject.ValidScalingPolicies, false,
					)
					<div class="flex flex-row space-x-6">
						<div class="basis-1/2">
							@componentForm.DualNumberRangeInputField(
								"Scaling Max Duration", "scalingMaxDurationHoursSelector",
								"scalingMaxDurationHours", "hour(s)", "1", "24", "1",
								"containerProfile.scalingMaxDurationHours",
								"scalingMaxDurationMinutes", "min(s)", "1", "1440", "5",
								"containerProfile.scalingMaxDurationMinutes",
							)
						</div>
						<div class="basis-1/2">
							@componentForm.DualNumberRangeInputField(
								"Scaling Interval", "scalingIntervalHoursSelector",
								"scalingIntervalHours", "hour(s)", "1", "24", "1",
								"containerProfile.scalingIntervalHours",
								"scalingIntervalMinutes", "min(s)", "1", "1440", "5",
								"containerProfile.scalingIntervalMinutes",
							)
						</div>
					</div>
					<div class="flex flex-row space-x-6">
						<div class="basis-1/2">
							<template x-if="isScalingPolicyConn">
								@componentForm.NumberRangeInputField(
									"scalingThreshold", "Connections Threshold",
									"conn(s)", "1", "1000", "10",
									"containerProfile.scalingThreshold",
								)
							</template>
							<template x-if="!isScalingPolicyConn">
								@componentForm.NumberRangeInputField(
									"scalingThreshold", "Resource Usage Threshold",
									"%", "0", "100", "1",
									"containerProfile.scalingThreshold",
								)
							</template>
						</div>
						<div class="basis-1/2">
							@componentForm.NumberRangeInputField(
								"hostMinCapacityPercent", "Minimum Free Host Capacity",
								"%", "0", "100", "1",
								"containerProfile.hostMinCapacityPercent",
							)
						</div>
					</div>
				</div>
			</details>
		</section>
		<button
			type="submit"
			@click="closeUpdateModal()"
			class="bg-speedia-500 border-speedia-500 mb-1 mt-5 w-full rounded-md border bg-opacity-90 px-5 py-2.5 text-center text-sm font-bold lowercase text-white hover:brightness-125"
		>
			<i class="ph-duotone ph-check-fat mr-1 align-middle"></i> Update
		</button>
	</form>
}

templ UpdateContainerProfileModal() {
	@componentStructural.Modal(
		"Update Container Profile", "isUpdateModalOpen", "closeUpdateModal()",
		"containerProfile.id", true,
	) {
		<div
			id="tab-textual-view"
			x-show="textualViewSelector"
		>
			@UpdateContainerProfileTextualForm()
		</div>
		<div id="tab-form-view" x-show="!textualViewSelector">
			@UpdateContainerProfileRegularForm()
		</div>
	}
}
