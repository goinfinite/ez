package page

import (
	"github.com/speedianet/control/src/domain/entity"
	componentContainer "github.com/speedianet/control/src/presentation/ui/component/container"
	componentForm "github.com/speedianet/control/src/presentation/ui/component/form"
	componentMisc "github.com/speedianet/control/src/presentation/ui/component/misc"
	uiHelper "github.com/speedianet/control/src/presentation/ui/helper"
)

script ContainerProfileIndexLocalState() {
	document.addEventListener('alpine:init', () => {
        Alpine.data('containerProfileManager', () => ({
			containerProfile: {},
			isUpdateModalOpen: false,

			openUpdateModal(containerProfileData) {
				this.containerProfile = containerProfileData;
				this.isUpdateModalOpen = true;
			},

			closeUpdateModal() {
				this.isUpdateModalOpen = false;
			},
    	}))
	})
}

templ ContainerProfileIndex(profiles []entity.ContainerProfile) {
	@ContainerProfileIndexLocalState()
	@componentMisc.PageTitle(
		"Container Profiles",
		"Container Profiles enable you to establish standardized settings that govern container hardware resource limits, autoscaling policies, and other configurations.",
		"ph-intersect-square",
	)
	<div class="container flex" x-data="containerProfileManager">
		<div id="profiles-tables" class="card w-full">
			@ContainerProfilesTextualTable(profiles)
		</div>
		@UpdateContainerProfileFormModal()
	</div>
}

templ ContainerProfilesTextualTable(profiles []entity.ContainerProfile) {
	<table
		id="profiles-textual-table"
		hx-get="/container/profile/"
		hx-trigger="submit from:form delay:500ms, click from:button#delete-profile delay:500ms"
		hx-select="#profiles-tables"
		hx-target="#profiles-tables"
		hx-swap="outerHTML transition:true"
		class="w-full table-auto border-collapse rounded-md transition-all duration-300 ease-in-out"
	>
		<thead class="bg-neutral-950 bg-opacity-50 text-xs uppercase text-neutral-400">
			<tr class="border-b border-neutral-500 border-opacity-90 text-center">
				<th scope="col" class="px-5 py-3">Id</th>
				<th scope="col" class="px-5 py-3 text-left">Name</th>
				<th scope="col" class="px-5 py-3">Scaling Policy</th>
				<th scope="col" class="px-5 py-3">Scaling Threshold</th>
				<th scope="col" class="px-5 py-3">Scaling Max Duration (seconds)</th>
				<th scope="col" class="px-5 py-3">Scaling Interval (seconds)</th>
				<th scope="col" class="px-5 py-3">Host Minimal Capacity (%)</th>
				<th scope="col" class="px-5 py-3"></th>
			</tr>
		</thead>
		<tbody>
			for _, profile := range profiles {
				<tr class="border-b border-neutral-500 border-opacity-30 bg-neutral-950 text-center odd:bg-opacity-20 even:bg-opacity-40">
					<td class="px-6 py-4">{ profile.Id.String() }</td>
					<td class="w-80 px-6 py-4 text-left">
						<p>{ profile.Name.String() }</p>
						@componentContainer.ProfileSummarySmallTag(profile)
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingPolicy) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingThreshold) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingMaxDurationSecs) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingIntervalSecs) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.HostMinCapacityPercent) }
					</td>
					<td class="inline-flex px-6 py-4">
						<button
							type="button"
							@click={ "openUpdateModal(" + profile.JsonSerialize() + ")" }
							class="me-2 inline-flex items-center rounded-full bg-neutral-50 bg-opacity-20 p-3 text-center font-medium hover:bg-opacity-40"
						>
							<i class="ph-bold ph-pencil text-xl"></i>
						</button>
						<button
							id="delete-profile"
							hx-delete={ "/api/v1/container/profile/" + profile.Id.String() + "/" }
							hx-swap="none"
							type="button"
							class="me-2 inline-flex items-center rounded-full bg-red-800 bg-opacity-60 p-3 text-center font-medium hover:bg-opacity-90"
						>
							<i class="ph-bold ph-trash text-xl"></i>
						</button>
					</td>
				</tr>
			}
			if len(profiles) == 0 {
				<tr class="border-b border-neutral-500 border-opacity-30 bg-neutral-950 bg-opacity-20">
					<td class="px-6 py-4" colspan="12">No profiles found.</td>
				</tr>
			}
		</tbody>
	</table>
}

templ UpdateContainerProfileFormModal() {
	<div
		id="update-container-profile-modal"
		x-show="isUpdateModalOpen"
		class="fixed left-0 top-0 z-50 mx-auto h-screen max-h-screen w-full overflow-y-auto overflow-x-hidden bg-neutral-950 bg-opacity-50 transition-all duration-300 ease-in-out"
	>
		<div
			class="bg-control-primary relative mx-auto mt-24 max-w-xl rounded-md bg-opacity-95 p-6 drop-shadow-xl"
			@click.away="closeUpdateModal()"
		>
			<div class="mb-6 flex justify-between align-middle">
				<h2 class="text-2xl">
					Update Container Profile <strong>#<span x-text="containerProfile.id"></span></strong>
				</h2>
				<button @click="closeUpdateModal()" class="bg-transparent text-gray-400 hover:text-gray-300">
					<i class="ph-bold ph-x-circle text-3xl"></i>
				</button>
			</div>
			<form
				hx-put="/api/v1/container/profile/"
				hx-indicator="#loading-overlay"
				hx-swap="none"
			>
				<input type="hidden" name="id" x-bind:value="containerProfile.id"/>
				@componentForm.InputField("text", "name", "Name", templ.Attributes{"x-bind:value": "containerProfile.name"})
				<button
					type="submit"
					@click="closeUpdateModal()"
					class="bg-speedia-primary mt-3 rounded-full px-5 py-2.5 text-center text-sm font-bold lowercase text-white hover:brightness-125"
				>
					Update
				</button>
			</form>
		</div>
	</div>
}
