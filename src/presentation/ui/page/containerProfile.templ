package page

import (
	"github.com/speedianet/control/src/domain/entity"
	componentContainer "github.com/speedianet/control/src/presentation/ui/component/container"
	componentMisc "github.com/speedianet/control/src/presentation/ui/component/misc"
	uiHelper "github.com/speedianet/control/src/presentation/ui/helper"
)

templ ContainerProfileIndex(profiles []entity.ContainerProfile) {
	@componentMisc.PageTitle(
		"Container Profiles",
		"Container Profiles enable you to establish standardized settings that govern container hardware resource limits, autoscaling policies, and other configurations.",
		"ph-intersect-square",
	)
	<div class="container flex" x-data="profileManager">
		<div id="profiles-tables" class="card w-full">
			@ContainerProfilesTextualTable(profiles)
		</div>
	</div>
}

templ ContainerProfilesTextualTable(profiles []entity.ContainerProfile) {
	<table
		id="profiles-textual-table"
		hx-get="/container/profile/"
		hx-trigger="submit from:form delay:500ms, click from:button.delete-profile delay:500ms"
		hx-select="#profiles-tables"
		hx-target="#profiles-tables"
		hx-swap="outerHTML transition:true"
		class="w-full table-auto border-collapse transition-all duration-300 ease-in-out"
	>
		<thead class="bg-neutral-950 bg-opacity-40 text-xs uppercase text-gray-400">
			<tr class="border-b border-neutral-500">
				<th scope="col" class="px-6 py-3">Id</th>
				<th scope="col" class="px-6 py-3">Name</th>
				<th scope="col" class="px-6 py-3">Scaling Policy</th>
				<th scope="col" class="px-6 py-3">Scaling Threshold</th>
				<th scope="col" class="px-6 py-3">Scaling Max Duration (seconds)</th>
				<th scope="col" class="px-6 py-3">Scaling Interval (seconds)</th>
				<th scope="col" class="px-6 py-3">Host Minimal Capacity (%)</th>
				<th scope="col" class="px-6 py-3"></th>
			</tr>
		</thead>
		<tbody>
			for _, profile := range profiles {
				<tr class="border-b border-neutral-500 bg-neutral-950 odd:bg-opacity-20 even:bg-opacity-40">
					<td class="px-6 py-4">{ profile.Id.String() }</td>
					<td class="w-80 px-6 py-4">
						<p>{ profile.Name.String() }</p>
						@componentContainer.ProfileSummarySmallTag(profile)
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingPolicy) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingThreshold) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingMaxDurationSecs) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingIntervalSecs) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.HostMinCapacityPercent) }
					</td>
					<td class="inline-flex px-6 py-4">
						<button
							type="button"
							@click={ "openUpdateModal(" + profile.JsonSerialize() + ")" }
							class="me-2 inline-flex items-center rounded-full bg-blue-600 p-2.5 text-center text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-800"
						>
							<svg class="h-6 w-6 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
								<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.779 17.779 4.36 19.918 6.5 13.5m4.279 4.279 8.364-8.643a3.027 3.027 0 0 0-2.14-5.165 3.03 3.03 0 0 0-2.14.886L6.5 13.5m4.279 4.279L6.499 13.5m2.14 2.14 6.213-6.504M12.75 7.04 17 11.28"></path>
							</svg>
						</button>
						<button
							hx-delete={ "/api/v1/profile/" + profile.Id.String() + "/" }
							hx-swap="none"
							type="button"
							class="delete-profile me-2 inline-flex items-center rounded-full bg-red-600 p-2.5 text-center text-sm font-medium hover:bg-red-700 focus:outline-none focus:ring-4 focus:ring-red-800"
						>
							<svg class="h-6 w-6 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
								<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 7h14m-9 3v8m4-8v8M10 3h4a1 1 0 0 1 1 1v3H9V4a1 1 0 0 1 1-1ZM6 7h12v13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7Z"></path>
							</svg>
						</button>
					</td>
				</tr>
			}
			if len(profiles) == 0 {
				<tr class="border-b border-gray-700 odd:bg-gray-900 even:bg-gray-800">
					<td class="px-6 py-4" colspan="5">No profiles found</td>
				</tr>
			}
		</tbody>
	</table>
}
