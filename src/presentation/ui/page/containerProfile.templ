package page

import (
	"github.com/speedianet/control/src/domain/entity"
	"github.com/speedianet/control/src/domain/valueObject"
	componentContainer "github.com/speedianet/control/src/presentation/ui/component/container"
	componentForm "github.com/speedianet/control/src/presentation/ui/component/form"
	componentMisc "github.com/speedianet/control/src/presentation/ui/component/misc"
	uiHelper "github.com/speedianet/control/src/presentation/ui/helper"
)

script ContainerProfileIndexLocalState() {
	document.addEventListener('alpine:init', () => {
        Alpine.data('containerProfileManager', () => ({
			containerProfile: {
				'id': '', 'name': '',
				'baseSpecs': {
					'millicores': 0, 'cpuCores': 0, 'memoryBytes': 0, 'memoryMebibytes': 0,
					'memoryGibibytes': 0, 'storagePerformanceUnits': 0,
				},
				'maxSpecs': {
					'millicores': null, 'cpuCores': null, 'memoryBytes': null, 'memoryMebibytes': null,
					'memoryGibibytes': null, 'storagePerformanceUnits': null,
				},
				'scalingPolicy': null, 'scalingThreshold': null,
				'scalingMaxDurationSecs': null, 'scalingIntervalSecs': null,
				'hostMinCapacityPercent': null,
			},
			gibibyteSelector: true,
			isUpdateModalOpen: false,

			openUpdateModal(containerProfileData) {
				this.containerProfile = containerProfileData;
				this.isUpdateModalOpen = true;
			},

			closeUpdateModal() {
				this.isUpdateModalOpen = false;
			},
    	}))
	})
}

templ ContainerProfileIndex(profiles []entity.ContainerProfile) {
	@ContainerProfileIndexLocalState()
	@componentMisc.PageTitle(
		"Container Profiles",
		"Container Profiles enable you to establish standardized settings that govern container hardware resource limits, autoscaling policies, and other configurations.",
		"ph-intersect-square",
	)
	<div class="container flex" x-data="containerProfileManager">
		<div id="profiles-tables" class="card w-full">
			@ContainerProfilesTextualTable(profiles)
		</div>
		@UpdateContainerProfileFormModal()
	</div>
}

templ ContainerProfilesTextualTable(profiles []entity.ContainerProfile) {
	<table
		id="profiles-textual-table"
		hx-get="/container/profile/"
		hx-trigger="submit from:form delay:500ms, click from:button#delete-profile delay:500ms"
		hx-select="#profiles-tables"
		hx-target="#profiles-tables"
		hx-swap="outerHTML transition:true"
		class="w-full table-auto border-collapse rounded-md transition-all duration-300 ease-in-out"
	>
		<thead class="bg-neutral-950 bg-opacity-50 text-xs uppercase text-neutral-400">
			<tr class="border-b border-neutral-500 border-opacity-90 text-center">
				<th scope="col" class="px-5 py-3">Id</th>
				<th scope="col" class="px-5 py-3 text-left">Name</th>
				<th scope="col" class="px-5 py-3">Scaling Policy</th>
				<th scope="col" class="px-5 py-3">Scaling Threshold</th>
				<th scope="col" class="px-5 py-3">Scaling Max Duration (seconds)</th>
				<th scope="col" class="px-5 py-3">Scaling Interval (seconds)</th>
				<th scope="col" class="px-5 py-3">Host Minimal Capacity (%)</th>
				<th scope="col" class="px-5 py-3"></th>
			</tr>
		</thead>
		<tbody>
			for _, profile := range profiles {
				<tr class="border-b border-neutral-500 border-opacity-30 bg-neutral-950 text-center odd:bg-opacity-20 even:bg-opacity-40">
					<td class="px-6 py-4">{ profile.Id.String() }</td>
					<td class="w-80 px-6 py-4 text-left">
						<p>{ profile.Name.String() }</p>
						@componentContainer.ProfileSummarySmallTag(profile)
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingPolicy) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingThreshold) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingMaxDurationSecs) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.ScalingIntervalSecs) }
					</td>
					<td class="px-6 py-4">
						{ uiHelper.FormatPointer(profile.HostMinCapacityPercent) }
					</td>
					<td class="inline-flex px-6 py-4">
						<button
							type="button"
							@click={ "openUpdateModal(" + profile.JsonSerialize() + ")" }
							class="me-2 inline-flex items-center rounded-full bg-neutral-50 bg-opacity-20 p-3 text-center font-medium hover:bg-opacity-40"
						>
							<i class="ph-bold ph-pencil text-xl"></i>
						</button>
						<button
							id="delete-profile"
							hx-delete={ "/api/v1/container/profile/" + profile.Id.String() + "/" }
							hx-swap="none"
							type="button"
							class="me-2 inline-flex items-center rounded-full bg-red-800 bg-opacity-60 p-3 text-center font-medium hover:bg-opacity-90"
						>
							<i class="ph-bold ph-trash text-xl"></i>
						</button>
					</td>
				</tr>
			}
			if len(profiles) == 0 {
				<tr class="border-b border-neutral-500 border-opacity-30 bg-neutral-950 bg-opacity-20">
					<td class="px-6 py-4" colspan="12">No profiles found.</td>
				</tr>
			}
		</tbody>
	</table>
}

templ UpdateContainerProfileFormModal() {
	<div
		id="update-container-profile-modal"
		x-show="isUpdateModalOpen"
		x-transition:enter="transition ease-out duration-500"
		x-transition:enter-start="opacity-0"
		x-transition:enter-end="opacity-100"
		x-transition:leave="transition ease-in duration-150"
		x-transition:leave-start="opacity-100"
		x-transition:leave-end="opacity-0"
		class="fixed left-0 top-0 z-50 mx-auto h-screen max-h-screen w-full overflow-y-auto overflow-x-hidden bg-neutral-950 bg-opacity-50"
	>
		<div
			class="bg-control-primary max-w-3/5 relative mx-auto mt-20 rounded-md bg-opacity-95 p-6 drop-shadow-xl xl:mt-24 xl:max-w-3xl"
			@click.away="closeUpdateModal()"
		>
			<div class="mb-6 flex justify-between align-middle">
				<h2 class="text-2xl">
					Update Container Profile <strong>#<span x-text="containerProfile.id"></span></strong>
				</h2>
				<button @click="closeUpdateModal()" class="bg-transparent text-gray-400 hover:text-gray-300">
					<i class="ph-bold ph-x-circle text-3xl"></i>
				</button>
			</div>
			<form
				hx-put="/api/v1/container/profile/"
				hx-indicator="#loading-overlay"
				hx-swap="none"
			>
				<input type="hidden" name="id" x-bind:value="containerProfile.id"/>
				@componentForm.InputField("text", "name", "Profile Name", "containerProfile.name")
				<div class="flex flex-row space-x-4">
					<div class="w-1/2 rounded-md bg-neutral-950 bg-opacity-20 p-4">
						<h3 class="font-bold">Base Specifications</h3>
						<p class="text-xs">The standard allocation of resources available to the container for everyday operations.</p>
						@componentForm.NumberRangeInputField(
							"baseSpecs.cpuCores", "CPU Cores", "0", "32", "0.5",
							"containerProfile.baseSpecs.cpuCores",
						)
						<div class="mb-2 inline-flex w-full items-center justify-between">
							<label class="text-sm font-bold text-neutral-50">RAM Memory</label>
							<label class="inline-flex cursor-pointer items-center rounded-md border border-neutral-50 border-opacity-10 p-1">
								<span class="mr-1 text-[10px] font-medium text-gray-300">MiB</span>
								<input type="checkbox" x-model:value="gibibyteSelector" class="peer sr-only"/>
								<div class="peer-checked:bg-speedia-primary peer relative h-4 w-7 rounded-md border-neutral-600 bg-neutral-50 bg-opacity-20 after:absolute after:start-[2px] after:top-[2px] after:h-3 after:w-3 after:rounded-full after:border after:border-neutral-300 after:bg-neutral-100 after:transition-all after:content-[''] peer-checked:after:translate-x-full peer-checked:after:border-white rtl:peer-checked:after:-translate-x-full"></div>
								<span class="ml-1 text-[10px] font-medium text-gray-300">GiB</span>
							</label>
						</div>
						<template x-if="gibibyteSelector">
							@componentForm.NumberRangeInputField(
								"baseSpecs.memoryGibibytes", "", "1", "64", "1",
								"containerProfile.baseSpecs.memoryGibibytes",
							)
						</template>
						<template x-if="!gibibyteSelector">
							@componentForm.NumberRangeInputField(
								"baseSpecs.memoryMebibytes", "", "100", "65536", "100",
								"containerProfile.baseSpecs.memoryMebibytes",
							)
						</template>
						@componentForm.NumberRangeInputField(
							"baseSpecs.storagePerformanceUnits", "Storage Performance Units",
							"1", "100", "1",
							"containerProfile.baseSpecs.storagePerformanceUnits",
						)
						<small class="-mt-1.5 mb-2 block rounded-md border-x-4 border-amber-400 border-opacity-20 bg-amber-400 bg-opacity-5 p-1 text-center text-[11px] text-neutral-50">
							<strong x-text="containerProfile.baseSpecs.storagePerformanceUnits"></strong> unit(s) = <strong><span x-text="containerProfile.baseSpecs.storagePerformanceUnits * 5"></span> MiB/s & <span x-text="containerProfile.baseSpecs.storagePerformanceUnits * 250"></span> operations</strong> of read and write
						</small>
					</div>
					<div class="w-1/2 rounded-md bg-neutral-950 bg-opacity-20 p-4">
						<h3 class="font-bold">Max Specifications</h3>
						<p class="text-xs">The peak allocation of resources available to the container during autoscaling periods.</p>
						@componentForm.NumberRangeInputField(
							"maxSpecs.cpuCores", "CPU Cores", "0", "32", "0.5",
							"containerProfile.maxSpecs.cpuCores",
						)
						<div class="mb-2 inline-flex w-full items-center justify-between">
							<label class="text-sm font-bold text-neutral-50">RAM Memory</label>
							<label class="inline-flex cursor-pointer items-center rounded-md border border-neutral-50 border-opacity-10 p-1">
								<span class="mr-1 text-[10px] font-medium text-gray-300">MiB</span>
								<input type="checkbox" x-model:value="gibibyteSelector" class="peer sr-only"/>
								<div class="peer-checked:bg-speedia-primary peer relative h-4 w-7 rounded-md border-neutral-600 bg-neutral-50 bg-opacity-20 after:absolute after:start-[2px] after:top-[2px] after:h-3 after:w-3 after:rounded-full after:border after:border-neutral-300 after:bg-neutral-100 after:transition-all after:content-[''] peer-checked:after:translate-x-full peer-checked:after:border-white rtl:peer-checked:after:-translate-x-full"></div>
								<span class="ml-1 text-[10px] font-medium text-gray-300">GiB</span>
							</label>
						</div>
						<template x-if="gibibyteSelector">
							@componentForm.NumberRangeInputField(
								"maxSpecs.memoryGibibytes", "", "1", "64", "1",
								"containerProfile.maxSpecs.memoryGibibytes",
							)
						</template>
						<template x-if="!gibibyteSelector">
							@componentForm.NumberRangeInputField(
								"maxSpecs.memoryMebibytes", "", "100", "65536", "100",
								"containerProfile.maxSpecs.memoryMebibytes",
							)
						</template>
						@componentForm.NumberRangeInputField(
							"maxSpecs.storagePerformanceUnits", "Storage Performance Units",
							"1", "100", "1",
							"containerProfile.maxSpecs.storagePerformanceUnits",
						)
						<small class="-mt-1.5 mb-2 block rounded-md border-x-4 border-amber-400 border-opacity-20 bg-amber-400 bg-opacity-5 p-1 text-center text-[11px] text-neutral-50">
							<strong x-text="containerProfile.maxSpecs.storagePerformanceUnits"></strong> unit(s) = <strong><span x-text="containerProfile.maxSpecs.storagePerformanceUnits * 5"></span> MiB/s & <span x-text="containerProfile.maxSpecs.storagePerformanceUnits * 250"></span> operations</strong> of read and write
						</small>
					</div>
				</div>
				<section class="mt-4 w-full rounded-md">
					<details class="group rounded-md bg-neutral-950 bg-opacity-20 p-4">
						<summary class="relative flex cursor-pointer list-none items-center pr-8 text-neutral-50 text-opacity-80 focus-visible:outline-none group-open:text-opacity-100 group-hover:text-neutral-50 [&::-webkit-details-marker]:hidden">
							<i class="ph-duotone ph-gear mr-2 text-2xl"></i>
							Advanced Settings
							<i class="ph-bold ph-plus absolute right-0 top-1.5 text-xs transition duration-300 group-open:rotate-45"></i>
						</summary>
						<div class="p-4">
							@componentForm.SelectInput(
								"scalingPolicy", "Scaling Policy", "containerProfile.scalingPolicy",
								valueObject.ValidScalingPolicies,
							)
						</div>
					</details>
				</section>
				<button
					type="submit"
					@click="closeUpdateModal()"
					class="bg-speedia-primary border-speedia-primary mb-1 mt-5 w-full rounded-md border bg-opacity-90 px-5 py-2.5 text-center text-sm font-bold lowercase text-white hover:brightness-125"
				>
					<i class="ph-duotone ph-check-fat mr-1 align-middle"></i> Update
				</button>
			</form>
		</div>
	</div>
}
