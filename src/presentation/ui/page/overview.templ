package page

import (
	"github.com/goinfinite/ez/src/domain/entity"
	"github.com/goinfinite/ez/src/domain/valueObject"
	componentContainer "github.com/goinfinite/ez/src/presentation/ui/component/container"
	componentStructural "github.com/goinfinite/ez/src/presentation/ui/component/structural"
)

script OverviewIndexLocalState() {
	document.addEventListener('alpine:init', () => {
		Alpine.data('overview', () => ({
			// Primary State
			resetPrimaryState() {
			},
			init() {
				this.resetPrimaryState();
			},

			// Auxiliary States

			// Modal States
		}))
	})
}

templ OverviewIndex(
	containerEntities []entity.Container,
	containerIdSummariesMap map[valueObject.ContainerId]componentContainer.ContainerSummary,
) {
	@OverviewIndexLocalState()
	<div class="flex flex-col" x-data="containerProfile">
		<div class="mb-6 flex flex-row items-center justify-between">
			<div class="basis-[70%]">
				@componentStructural.PageTitle(
					"Overview",
					"To be decided.",
					"ph-speedometer",
				)
			</div>
			<div class="my-4 flex space-x-5"></div>
		</div>
		<div id="containers" class="card w-full">
			@ContainersTable(containerEntities, containerIdSummariesMap)
		</div>
		<div id="resource-usage-graphs" class="card w-full"></div>
		<div id="system-information" class="card w-full"></div>
	</div>
}

templ ContainersTable(
	containerEntities []entity.Container,
	containerIdSummariesMap map[valueObject.ContainerId]componentContainer.ContainerSummary,
) {
	<table
		id="containers-table"
		hx-get="/overview/"
		hx-trigger="submit from:form delay:500ms, click from:button#delete-element delay:500ms"
		hx-select="#containers-table"
		hx-target="#containers-table"
		hx-swap="outerHTML transition:true"
		class="w-full table-auto border-collapse rounded-md transition-all duration-300 ease-in-out"
	>
		<thead class="bg-ez-800 text-xs uppercase text-neutral-400">
			<tr class="border-b border-neutral-500 border-opacity-90 text-center">
				<th scope="col" class="px-5 py-3">Container</th>
				<th scope="col" class="px-5 py-3">CPU</th>
				<th scope="col" class="px-5 py-3">RAM</th>
				<th scope="col" class="px-5 py-3">Restarts</th>
				<th scope="col" class="px-5 py-3">Port Bindings</th>
				<th scope="col" class="px-5 py-3"></th>
			</tr>
		</thead>
		<tbody>
			for _, containerEntity := range containerEntities {
				<tr class="odd:bg-ez-400 even:bg-ez-600 border-b border-neutral-500 border-opacity-30 text-center">
					<td class="w-84 px-6 py-4 text-left">
						@componentContainer.ContainerTaggedSummary(containerIdSummariesMap[containerEntity.Id])
					</td>
					<td class="px-6 py-4">Resource Usage</td>
					<td class="px-6 py-4">Resource Usage</td>
					<td class="px-6 py-4">Restarts</td>
					<td class="px-6 py-4">
						if len(containerEntity.PortBindings) > 0 {
							@componentContainer.PortBindingsTable(containerEntity.PortBindings, false)
						} else {
							<div class="text-center text-neutral-400">---</div>
						}
					</td>
					<td class="px-6 py-4"></td>
				</tr>
			}
			if len(containerEntities) == 0 {
				<tr class="border-b border-neutral-500 border-opacity-30 bg-neutral-950 bg-opacity-20">
					<td class="px-6 py-4" colspan="12">No containers yet.</td>
				</tr>
			}
		</tbody>
	</table>
}
